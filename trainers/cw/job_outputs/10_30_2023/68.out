Tensorflow Version: 2.8.0
Num GPUs Available:  1
Collecting Variables...
All variables have been collected.
../cache/
cw
train68
Description: crackles with diff params + mixing data + preemp w diff params
-----------------------
Job id is 1.
- Loading Perch.
3278 Perch audios have been loaded.
- Loading Icbhi.
725 Icbhi audios have been loaded.
- Loading Antwerp.
131 Antwerp audios have been loaded.
- Preparing Perch.
862 Perch groups of audio chunks (by filename or patients) have been prepared.
- Preparing Icbhi.
112 Icbhi groups of audio chunks (by filename or patients) have been prepared.
- Preparing Antwerp.
15 Antwerp groups of audio chunks (by filename or patients) have been prepared.
--- Samples are being split into training/val groups and de-grouped by patient ---
--- Perch training dataset went from 0 to 2649 elements, with 2346 none's, 61 crakles, 186 wheezes and 56 both ---
--- Perch Validation dataset contains 629 elements, with 551 none, 12 crackles, 54 wheezes and 12 both ---
--- Icbhi training dataset went from 0 to 2040 elements, with 707 none's, 720 crakles, 285 wheezes and 327 both ---
--- Icbhi Validation dataset contains 299 elements, with 172 none, 70 crackles, 18 wheezes and 39 both ---
--- Antwerp training dataset went from 0 to 580 elements, with 82 none's, 16 crakles, 448 wheezes and 34 both ---
--- Antwerp Validation dataset contains 111 elements, with 17 none, 10 crackles, 5 wheezes and 79 both ---
3908
1138
964
298
-----------------------
--- Final training dataset went from 0 to 5046 elements, with 3908 0's, 1138 1's and 0 others ---
--- Final Validation dataset contains 1262 elements, with 964 0's and 298 1's ---
Model: "leaf_model9_model"
______________________________________________________________________________________________________________
 Layer (type)                                    Output Shape                                Param #          
==============================================================================================================
 leaf (Leaf)                                     multiple                                    562              
                                                                                                              
 sequential (Sequential)                         (None, 80, 500, 1)                          4                
                                                                                                              
 sequential_1 (Sequential)                       (None, 80, 500, 16)                         2352             
                                                                                                              
 sequential_2 (Sequential)                       (None, 80, 500, 16)                         6448             
                                                                                                              
 sequential_3 (Sequential)                       (None, 80, 500, 16)                         32               
                                                                                                              
 concatenate (Concatenate)                       multiple                                    0                
                                                                                                              
 sequential_4 (Sequential)                       (None, 1)                                   6191809          
                                                                                                              
==============================================================================================================
Total params: 6,201,207
Trainable params: 6,159,701
Non-trainable params: 41,506
______________________________________________________________________________________________________________
Target metric is avg_accuracy
Epoch 1/25
Validation cm: [[964   0]
 [298   0]]
Validation normalized_cm: [[1. 0.]
 [1. 0.]]
Validation acc: 0.7638668779714739
Validation class_accuracies: [1.0, 0.0]
Validation precision: 0.0
Validation recall: 0.0
Validation f1: 0.0
Validation roc_auc: 0.6659281099445822
Validation avg_accuracy: 0.5
Validation one_indexed_epoch: 1
-- New best results were achieved. --
Patient Confusion matrix: 
 [[693   0]
 [ 47   0]] 
Patient Normalized Confusion matrix: 
 [[1. 0.]
 [1. 0.]] 
Patient Validation accuracy: 
 93.65 
Patient Validation class accuracies: 
 [1.0, 0.0] 
316/316 - 723s - loss: 0.5360 - accuracy: 0.7509 - 723s/epoch - 2s/step
Epoch 2/25
Validation cm: [[938  26]
 [252  46]]
Validation normalized_cm: [[0.973 0.027]
 [0.846 0.154]]
Validation acc: 0.7797147385103012
Validation class_accuracies: [0.9730290456431535, 0.15436241610738255]
Validation precision: 0.6388888888888888
Validation recall: 0.15436241610738255
Validation f1: 0.24864864864864866
Validation roc_auc: 0.8175004873430058
Validation avg_accuracy: 0.563695730875268
Validation one_indexed_epoch: 2
-- New best results were achieved. --
Patient Confusion matrix: 
 [[677  16]
 [ 35  12]] 
Patient Normalized Confusion matrix: 
 [[0.977 0.023]
 [0.745 0.255]] 
Patient Validation accuracy: 
 93.11 
Patient Validation class accuracies: 
 [0.976911976911977, 0.2553191489361702] 
316/316 - 703s - loss: 0.4433 - accuracy: 0.7786 - 703s/epoch - 2s/step
Epoch 3/25
Validation cm: [[281 683]
 [ 49 249]]
Validation normalized_cm: [[0.291 0.709]
 [0.164 0.836]]
Validation acc: 0.41996830427892234
Validation class_accuracies: [0.29149377593361, 0.8355704697986577]
Validation precision: 0.26716738197424894
Validation recall: 0.8355704697986577
Validation f1: 0.4048780487804878
Validation roc_auc: 0.6098018602578741
Validation avg_accuracy: 0.5635321228661339
Validation one_indexed_epoch: 3
The validation tracker metric at 0.563695730875268 hasn't increased by 0 in 1 epochs
316/316 - 704s - loss: 0.4395 - accuracy: 0.7741 - 704s/epoch - 2s/step
Epoch 4/25
Validation cm: [[723 241]
 [159 139]]
Validation normalized_cm: [[0.75  0.25 ]
 [0.534 0.466]]
Validation acc: 0.6830427892234548
Validation class_accuracies: [0.75, 0.4664429530201342]
Validation precision: 0.36578947368421055
Validation recall: 0.4664429530201342
Validation f1: 0.41002949852507375
Validation roc_auc: 0.6794745049987468
Validation avg_accuracy: 0.6082214765100671
Validation one_indexed_epoch: 4
-- New best results were achieved. --
Patient Confusion matrix: 
 [[520 173]
 [ 19  28]] 
Patient Normalized Confusion matrix: 
 [[0.75  0.25 ]
 [0.404 0.596]] 
Patient Validation accuracy: 
 74.05 
Patient Validation class accuracies: 
 [0.7503607503607503, 0.5957446808510638] 
316/316 - 704s - loss: 0.4138 - accuracy: 0.7971 - 704s/epoch - 2s/step
Epoch 5/25
Validation cm: [[690 274]
 [ 73 225]]
Validation normalized_cm: [[0.716 0.284]
 [0.245 0.755]]
Validation acc: 0.7250396196513471
Validation class_accuracies: [0.7157676348547718, 0.7550335570469798]
Validation precision: 0.45090180360721444
Validation recall: 0.7550335570469798
Validation f1: 0.5646173149309912
Validation roc_auc: 0.8143188337185664
Validation avg_accuracy: 0.7354005959508758
Validation one_indexed_epoch: 5
-- New best results were achieved. --
Patient Confusion matrix: 
 [[586 107]
 [ 26  21]] 
Patient Normalized Confusion matrix: 
 [[0.846 0.154]
 [0.553 0.447]] 
Patient Validation accuracy: 
 82.03 
Patient Validation class accuracies: 
 [0.8455988455988456, 0.44680851063829785] 
316/316 - 706s - loss: 0.4037 - accuracy: 0.8010 - 706s/epoch - 2s/step
Epoch 6/25
Validation cm: [[931  33]
 [245  53]]
Validation normalized_cm: [[0.966 0.034]
 [0.822 0.178]]
Validation acc: 0.7797147385103012
Validation class_accuracies: [0.9657676348547718, 0.17785234899328858]
Validation precision: 0.6162790697674418
Validation recall: 0.17785234899328858
Validation f1: 0.27604166666666663
Validation roc_auc: 0.8188128324375503
Validation avg_accuracy: 0.5718099919240301
Validation one_indexed_epoch: 6
The validation tracker metric at 0.7354005959508758 hasn't increased by 0 in 1 epochs
316/316 - 705s - loss: 0.3878 - accuracy: 0.8040 - 705s/epoch - 2s/step
Epoch 7/25
Validation cm: [[788 176]
 [132 166]]
Validation normalized_cm: [[0.817 0.183]
 [0.443 0.557]]
Validation acc: 0.7559429477020603
Validation class_accuracies: [0.8174273858921162, 0.5570469798657718]
Validation precision: 0.4853801169590643
Validation recall: 0.5570469798657718
Validation f1: 0.5187499999999999
Validation roc_auc: 0.7805564064719152
Validation avg_accuracy: 0.687237182878944
Validation one_indexed_epoch: 7
The validation tracker metric at 0.7354005959508758 hasn't increased by 0 in 2 epochs
316/316 - 705s - loss: 0.3837 - accuracy: 0.8167 - 705s/epoch - 2s/step
Epoch 8/25
Validation cm: [[949  15]
 [278  20]]
Validation normalized_cm: [[0.984 0.016]
 [0.933 0.067]]
Validation acc: 0.7678288431061807
Validation class_accuracies: [0.9844398340248963, 0.06711409395973154]
Validation precision: 0.5714285714285714
Validation recall: 0.06711409395973154
Validation f1: 0.1201201201201201
Validation roc_auc: 0.6374168035868445
Validation avg_accuracy: 0.5257769639923139
Validation one_indexed_epoch: 8
The validation tracker metric at 0.7354005959508758 hasn't increased by 0 in 3 epochs
316/316 - 704s - loss: 0.3662 - accuracy: 0.8290 - 704s/epoch - 2s/step
Epoch 9/25
Validation cm: [[383 581]
 [ 13 285]]
Validation normalized_cm: [[0.397 0.603]
 [0.044 0.956]]
Validation acc: 0.5293185419968305
Validation class_accuracies: [0.39730290456431533, 0.9563758389261745]
Validation precision: 0.32909930715935337
Validation recall: 0.9563758389261745
Validation f1: 0.48969072164948463
Validation roc_auc: 0.7437933387173132
Validation avg_accuracy: 0.6768393717452449
Validation one_indexed_epoch: 9
The validation tracker metric at 0.7354005959508758 hasn't increased by 0 in 4 epochs
316/316 - 706s - loss: 0.3657 - accuracy: 0.8238 - 706s/epoch - 2s/step
Epoch 10/25
Validation cm: [[930  34]
 [212  86]]
Validation normalized_cm: [[0.965 0.035]
 [0.711 0.289]]
Validation acc: 0.8050713153724247
Validation class_accuracies: [0.9647302904564315, 0.28859060402684567]
Validation precision: 0.7166666666666667
Validation recall: 0.28859060402684567
Validation f1: 0.41148325358851673
Validation roc_auc: 0.7939861873068033
Validation avg_accuracy: 0.6266604472416386
Validation one_indexed_epoch: 10
The validation tracker metric at 0.7354005959508758 hasn't increased by 0 in 5 epochs
316/316 - 705s - loss: 0.3465 - accuracy: 0.8411 - 705s/epoch - 2s/step
Epoch 11/25
Validation cm: [[643 321]
 [ 21 277]]
Validation normalized_cm: [[0.667 0.333]
 [0.07  0.93 ]]
Validation acc: 0.7290015847860539
Validation class_accuracies: [0.66701244813278, 0.9295302013422819]
Validation precision: 0.46321070234113715
Validation recall: 0.9295302013422819
Validation f1: 0.6183035714285715
Validation roc_auc: 0.859697429613746
Validation avg_accuracy: 0.798271324737531
Validation one_indexed_epoch: 11
-- New best results were achieved. --
Patient Confusion matrix: 
 [[536 157]
 [  8  39]] 
Patient Normalized Confusion matrix: 
 [[0.773 0.227]
 [0.17  0.83 ]] 
Patient Validation accuracy: 
 77.70 
Patient Validation class accuracies: 
 [0.7734487734487735, 0.8297872340425532] 
316/316 - 708s - loss: 0.3345 - accuracy: 0.8488 - 708s/epoch - 2s/step
Epoch 12/25
Validation cm: [[842 122]
 [151 147]]
Validation normalized_cm: [[0.873 0.127]
 [0.507 0.493]]
Validation acc: 0.783676703645008
Validation class_accuracies: [0.8734439834024896, 0.49328859060402686]
Validation precision: 0.5464684014869888
Validation recall: 0.49328859060402686
Validation f1: 0.5185185185185186
Validation roc_auc: 0.8417109916733967
Validation avg_accuracy: 0.6833662870032582
Validation one_indexed_epoch: 12
The validation tracker metric at 0.798271324737531 hasn't increased by 0 in 1 epochs
316/316 - 706s - loss: 0.3277 - accuracy: 0.8458 - 706s/epoch - 2s/step
Epoch 13/25
Validation cm: [[539 425]
 [ 23 275]]
Validation normalized_cm: [[0.559 0.441]
 [0.077 0.923]]
Validation acc: 0.6450079239302694
Validation class_accuracies: [0.5591286307053942, 0.9228187919463087]
Validation precision: 0.39285714285714285
Validation recall: 0.9228187919463087
Validation f1: 0.5511022044088176
Validation roc_auc: 0.8125957280904508
Validation avg_accuracy: 0.7409737113258514
Validation one_indexed_epoch: 13
The validation tracker metric at 0.798271324737531 hasn't increased by 0 in 2 epochs
316/316 - 821s - loss: 0.3182 - accuracy: 0.8559 - 821s/epoch - 3s/step
Epoch 14/25
Validation cm: [[851 113]
 [117 181]]
Validation normalized_cm: [[0.883 0.117]
 [0.393 0.607]]
Validation acc: 0.8177496038034865
Validation class_accuracies: [0.8827800829875518, 0.6073825503355704]
Validation precision: 0.6156462585034014
Validation recall: 0.6073825503355704
Validation f1: 0.6114864864864865
Validation roc_auc: 0.822123283856415
Validation avg_accuracy: 0.7450813166615611
Validation one_indexed_epoch: 14
The validation tracker metric at 0.798271324737531 hasn't increased by 0 in 3 epochs
316/316 - 708s - loss: 0.3097 - accuracy: 0.8613 - 708s/epoch - 2s/step
Epoch 15/25
Validation cm: [[893  71]
 [159 139]]
Validation normalized_cm: [[0.926 0.074]
 [0.534 0.466]]
Validation acc: 0.8177496038034865
Validation class_accuracies: [0.9263485477178424, 0.4664429530201342]
Validation precision: 0.6619047619047619
Validation recall: 0.4664429530201342
Validation f1: 0.5472440944881889
Validation roc_auc: 0.835198000501267
Validation avg_accuracy: 0.6963957503689883
Validation one_indexed_epoch: 15
The validation tracker metric at 0.798271324737531 hasn't increased by 0 in 4 epochs
316/316 - 762s - loss: 0.3018 - accuracy: 0.8666 - 762s/epoch - 2s/step
Epoch 16/25
Validation cm: [[771 193]
 [ 88 210]]
Validation normalized_cm: [[0.8   0.2  ]
 [0.295 0.705]]
Validation acc: 0.777337559429477
Validation class_accuracies: [0.799792531120332, 0.7046979865771812]
Validation precision: 0.5210918114143921
Validation recall: 0.7046979865771812
Validation f1: 0.5991440798858774
Validation roc_auc: 0.8212077752095575
Validation avg_accuracy: 0.7522452588487566
Validation one_indexed_epoch: 16
The validation tracker metric at 0.798271324737531 hasn't increased by 0 in 5 epochs
316/316 - 708s - loss: 0.2805 - accuracy: 0.8753 - 708s/epoch - 2s/step
Epoch 17/25
Validation cm: [[925  39]
 [186 112]]
Validation normalized_cm: [[0.96  0.04 ]
 [0.624 0.376]]
Validation acc: 0.8217115689381933
Validation class_accuracies: [0.9595435684647303, 0.37583892617449666]
Validation precision: 0.7417218543046358
Validation recall: 0.37583892617449666
Validation f1: 0.4988864142538975
Validation roc_auc: 0.845776824751455
Validation avg_accuracy: 0.6676912473196135
Validation one_indexed_epoch: 17
The validation tracker metric at 0.798271324737531 hasn't increased by 0 in 6 epochs
316/316 - 709s - loss: 0.2707 - accuracy: 0.8819 - 709s/epoch - 2s/step
Epoch 18/25
Validation cm: [[813 151]
 [ 93 205]]
Validation normalized_cm: [[0.843 0.157]
 [0.312 0.688]]
Validation acc: 0.8066561014263075
Validation class_accuracies: [0.8433609958506224, 0.6879194630872483]
Validation precision: 0.5758426966292135
Validation recall: 0.6879194630872483
Validation f1: 0.6269113149847095
Validation roc_auc: 0.8663322565373583
Validation avg_accuracy: 0.7656402294689353
Validation one_indexed_epoch: 18
The validation tracker metric at 0.798271324737531 hasn't increased by 0 in 7 epochs
316/316 - 709s - loss: 0.2636 - accuracy: 0.8817 - 709s/epoch - 2s/step
Epoch 19/25
Validation cm: [[593 371]
 [ 31 267]]
Validation normalized_cm: [[0.615 0.385]
 [0.104 0.896]]
Validation acc: 0.6814580031695721
Validation class_accuracies: [0.6151452282157677, 0.8959731543624161]
Validation precision: 0.41849529780564265
Validation recall: 0.8959731543624161
Validation f1: 0.5705128205128205
Validation roc_auc: 0.8479803113425604
Validation avg_accuracy: 0.7555591912890919
Validation one_indexed_epoch: 19
The validation tracker metric at 0.798271324737531 hasn't increased by 0 in 8 epochs
316/316 - 708s - loss: 0.2499 - accuracy: 0.8930 - 708s/epoch - 2s/step
Epoch 20/25
Validation cm: [[845 119]
 [ 81 217]]
Validation normalized_cm: [[0.877 0.123]
 [0.272 0.728]]
Validation acc: 0.8415213946117274
Validation class_accuracies: [0.8765560165975104, 0.7281879194630873]
Validation precision: 0.6458333333333334
Validation recall: 0.7281879194630873
Validation f1: 0.6845425867507886
Validation roc_auc: 0.8945633406666851
Validation avg_accuracy: 0.8023719680302988
Validation one_indexed_epoch: 20
-- New best results were achieved. --
Patient Confusion matrix: 
 [[635  58]
 [ 18  29]] 
Patient Normalized Confusion matrix: 
 [[0.916 0.084]
 [0.383 0.617]] 
Patient Validation accuracy: 
 89.73 
Patient Validation class accuracies: 
 [0.9163059163059163, 0.6170212765957447] 
316/316 - 709s - loss: 0.2449 - accuracy: 0.8950 - 709s/epoch - 2s/step
Epoch 21/25
Validation cm: [[828 136]
 [130 168]]
Validation normalized_cm: [[0.859 0.141]
 [0.436 0.564]]
Validation acc: 0.7892234548335975
Validation class_accuracies: [0.8589211618257261, 0.5637583892617449]
Validation precision: 0.5526315789473685
Validation recall: 0.5637583892617449
Validation f1: 0.5581395348837209
Validation roc_auc: 0.771094990113899
Validation avg_accuracy: 0.7113397755437355
Validation one_indexed_epoch: 21
The validation tracker metric at 0.8023719680302988 hasn't increased by 0 in 1 epochs
316/316 - 708s - loss: 0.2235 - accuracy: 0.9029 - 708s/epoch - 2s/step
Epoch 22/25
Validation cm: [[726 238]
 [ 62 236]]
Validation normalized_cm: [[0.753 0.247]
 [0.208 0.792]]
Validation acc: 0.7622820919175911
Validation class_accuracies: [0.7531120331950207, 0.7919463087248322]
Validation precision: 0.4978902953586498
Validation recall: 0.7919463087248322
Validation f1: 0.6113989637305699
Validation roc_auc: 0.8496529421593471
Validation avg_accuracy: 0.7725291709599265
Validation one_indexed_epoch: 22
The validation tracker metric at 0.8023719680302988 hasn't increased by 0 in 2 epochs
316/316 - 709s - loss: 0.2149 - accuracy: 0.9073 - 709s/epoch - 2s/step
Epoch 23/25
Validation cm: [[678 286]
 [ 43 255]]
Validation normalized_cm: [[0.703 0.297]
 [0.144 0.856]]
Validation acc: 0.7393026941362916
Validation class_accuracies: [0.7033195020746889, 0.8557046979865772]
Validation precision: 0.4713493530499076
Validation recall: 0.8557046979865772
Validation f1: 0.6078665077473183
Validation roc_auc: 0.8457872678158679
Validation avg_accuracy: 0.7795121000306331
Validation one_indexed_epoch: 23
The validation tracker metric at 0.8023719680302988 hasn't increased by 0 in 3 epochs
316/316 - 709s - loss: 0.2003 - accuracy: 0.9148 - 709s/epoch - 2s/step
Epoch 24/25
Validation cm: [[782 182]
 [ 88 210]]
Validation normalized_cm: [[0.811 0.189]
 [0.295 0.705]]
Validation acc: 0.786053882725832
Validation class_accuracies: [0.8112033195020747, 0.7046979865771812]
Validation precision: 0.5357142857142857
Validation recall: 0.7046979865771812
Validation f1: 0.6086956521739131
Validation roc_auc: 0.8323748920883344
Validation avg_accuracy: 0.7579506530396279
Validation one_indexed_epoch: 24
The validation tracker metric at 0.8023719680302988 hasn't increased by 0 in 4 epochs
316/316 - 710s - loss: 0.1841 - accuracy: 0.9249 - 710s/epoch - 2s/step
Epoch 25/25
Validation cm: [[804 160]
 [ 65 233]]
Validation normalized_cm: [[0.834 0.166]
 [0.218 0.782]]
Validation acc: 0.8217115689381933
Validation class_accuracies: [0.8340248962655602, 0.7818791946308725]
Validation precision: 0.5928753180661578
Validation recall: 0.7818791946308725
Validation f1: 0.6743849493487698
Validation roc_auc: 0.8886073129299062
Validation avg_accuracy: 0.8079520454482163
Validation one_indexed_epoch: 25
-- New best results were achieved. --
Patient Confusion matrix: 
 [[612  81]
 [ 11  36]] 
Patient Normalized Confusion matrix: 
 [[0.883 0.117]
 [0.234 0.766]] 
Patient Validation accuracy: 
 87.57 
Patient Validation class accuracies: 
 [0.8831168831168831, 0.7659574468085106] 
316/316 - 672s - loss: 0.1818 - accuracy: 0.9231 - 672s/epoch - 2s/step
----------------------------------
The best metrics for this job are: 

Best avg_accuracy: 0.8079520454482163
Best cm: [[804 160]
 [ 65 233]]
Best normalized_cm: [[0.834 0.166]
 [0.218 0.782]]
Best acc: 0.8217115689381933
Best class_accuracies: [0.8340248962655602, 0.7818791946308725]
Best precision: 0.5928753180661578
Best recall: 0.7818791946308725
Best f1: 0.6743849493487698
Best roc_auc: 0.8886073129299062
Best one_indexed_epoch: 25
Best patient_cm: [[612  81]
 [ 11  36]]
avg_accuracy
model
cm
normalized_cm
acc
class_accuracies
precision
recall
f1
roc_auc
one_indexed_epoch
patient_cm
Initial weights
[<tf.Variable 'leaf/tfbanks_preemp/kernel:0' shape=(2, 1, 1) dtype=float32, numpy=
array([[[-0.851]],

       [[ 1.03 ]]], dtype=float32)>, <tf.Variable 'kernel:0' shape=(80, 2) dtype=float32, numpy=
array([[2.938e-02, 1.503e+02],
       [3.695e-02, 9.594e+01],
       [4.695e-02, 1.503e+02],
       [5.192e-02, 1.503e+02],
       [7.938e-02, 1.503e+02],
       [8.234e-02, 9.597e+01],
       [1.031e-01, 9.597e+01],
       [1.067e-01, 9.595e+01],
       [1.058e-01, 9.594e+01],
       [1.236e-01, 9.596e+01],
       [1.331e-01, 9.594e+01],
       [1.464e-01, 9.594e+01],
       [1.692e-01, 9.590e+01],
       [1.860e-01, 9.592e+01],
       [1.960e-01, 9.594e+01],
       [2.154e-01, 9.594e+01],
       [2.253e-01, 1.503e+02],
       [2.422e-01, 9.593e+01],
       [2.573e-01, 9.595e+01],
       [2.768e-01, 9.594e+01],
       [2.807e-01, 9.594e+01],
       [2.879e-01, 9.595e+01],
       [3.159e-01, 9.595e+01],
       [3.395e-01, 9.598e+01],
       [3.552e-01, 6.393e+01],
       [3.694e-01, 9.596e+01],
       [3.820e-01, 6.395e+01],
       [4.156e-01, 9.593e+01],
       [4.205e-01, 6.395e+01],
       [4.599e-01, 6.397e+01],
       [4.889e-01, 6.398e+01],
       [5.106e-01, 6.397e+01],
       [5.386e-01, 6.397e+01],
       [5.570e-01, 6.396e+01],
       [5.721e-01, 6.397e+01],
       [6.105e-01, 6.398e+01],
       [6.225e-01, 6.395e+01],
       [6.364e-01, 6.397e+01],
       [6.833e-01, 4.799e+01],
       [7.067e-01, 4.796e+01],
       [7.332e-01, 4.795e+01],
       [7.760e-01, 4.798e+01],
       [8.127e-01, 4.798e+01],
       [8.367e-01, 4.798e+01],
       [8.846e-01, 4.798e+01],
       [8.993e-01, 4.798e+01],
       [9.494e-01, 4.799e+01],
       [9.705e-01, 3.836e+01],
       [1.027e+00, 3.837e+01],
       [1.028e+00, 3.839e+01],
       [1.087e+00, 3.837e+01],
       [1.145e+00, 3.839e+01],
       [1.179e+00, 3.198e+01],
       [1.210e+00, 3.198e+01],
       [1.268e+00, 3.838e+01],
       [1.305e+00, 3.198e+01],
       [1.358e+00, 3.199e+01],
       [1.420e+00, 3.199e+01],
       [1.464e+00, 2.742e+01],
       [1.508e+00, 2.742e+01],
       [1.562e+00, 3.199e+01],
       [1.631e+00, 2.741e+01],
       [1.678e+00, 2.742e+01],
       [1.734e+00, 2.399e+01],
       [1.800e+00, 2.398e+01],
       [1.876e+00, 2.398e+01],
       [1.939e+00, 2.398e+01],
       [1.982e+00, 2.399e+01],
       [2.039e+00, 2.132e+01],
       [2.143e+00, 2.133e+01],
       [2.206e+00, 1.918e+01],
       [2.276e+00, 1.918e+01],
       [2.360e+00, 2.131e+01],
       [2.420e+00, 1.918e+01],
       [2.516e+00, 1.918e+01],
       [2.602e+00, 1.744e+01],
       [2.689e+00, 1.745e+01],
       [2.767e+00, 1.598e+01],
       [2.877e+00, 1.746e+01],
       [2.962e+00, 1.599e+01]], dtype=float32)>, <tf.Variable 'leaf/learnable_pooling/kernel:0' shape=(1, 1, 80, 1) dtype=float32, numpy=
array([[[[0.391],
         [0.4  ],
         [0.381],
         [0.386],
         [0.359],
         [0.353],
         [0.356],
         [0.379],
         [0.38 ],
         [0.372],
         [0.387],
         [0.375],
         [0.378],
         [0.422],
         [0.407],
         [0.423],
         [0.444],
         [0.413],
         [0.389],
         [0.389],
         [0.402],
         [0.434],
         [0.406],
         [0.397],
         [0.409],
         [0.42 ],
         [0.396],
         [0.42 ],
         [0.418],
         [0.396],
         [0.405],
         [0.4  ],
         [0.405],
         [0.421],
         [0.397],
         [0.385],
         [0.399],
         [0.413],
         [0.402],
         [0.399],
         [0.413],
         [0.413],
         [0.385],
         [0.384],
         [0.398],
         [0.411],
         [0.382],
         [0.423],
         [0.426],
         [0.405],
         [0.41 ],
         [0.403],
         [0.407],
         [0.395],
         [0.414],
         [0.419],
         [0.399],
         [0.401],
         [0.411],
         [0.399],
         [0.406],
         [0.41 ],
         [0.386],
         [0.397],
         [0.4  ],
         [0.398],
         [0.399],
         [0.388],
         [0.395],
         [0.384],
         [0.393],
         [0.392],
         [0.393],
         [0.393],
         [0.384],
         [0.387],
         [0.383],
         [0.387],
         [0.38 ],
         [0.394]]]], dtype=float32)>, <tf.Variable 'leaf/PCEN/alpha:0' shape=(80,) dtype=float32, numpy=
array([0.962, 0.962, 0.967, 0.952, 0.955, 0.965, 0.948, 0.959, 0.952,
       0.955, 0.958, 0.959, 0.963, 0.951, 0.962, 0.962, 0.952, 0.958,
       0.966, 0.951, 0.961, 0.948, 0.964, 0.956, 0.96 , 0.962, 0.955,
       0.956, 0.964, 0.956, 0.96 , 0.953, 0.958, 0.964, 0.962, 0.958,
       0.962, 0.958, 0.955, 0.957, 0.969, 0.956, 0.952, 0.957, 0.959,
       0.967, 0.981, 0.95 , 0.953, 0.965, 0.946, 0.955, 0.958, 0.961,
       0.957, 0.956, 0.96 , 0.959, 0.961, 0.956, 0.959, 0.961, 0.961,
       0.964, 0.956, 0.956, 0.971, 0.952, 0.952, 0.958, 0.959, 0.955,
       0.961, 0.966, 0.957, 0.955, 0.959, 0.958, 0.955, 0.956],
      dtype=float32)>, <tf.Variable 'leaf/PCEN/delta:0' shape=(80,) dtype=float32, numpy=
array([2.   , 1.995, 1.987, 1.992, 1.997, 1.985, 2.005, 1.994, 2.   ,
       1.997, 1.995, 1.997, 1.995, 2.009, 1.999, 1.999, 2.008, 2.002,
       1.993, 2.009, 1.999, 2.012, 1.996, 2.004, 2.001, 1.997, 2.005,
       2.004, 1.997, 2.004, 2.   , 2.006, 2.001, 1.994, 1.996, 2.001,
       1.997, 2.001, 2.005, 2.003, 1.993, 2.005, 2.007, 2.002, 2.001,
       1.994, 1.979, 2.01 , 2.007, 1.995, 2.014, 2.004, 2.001, 1.999,
       2.003, 2.004, 1.999, 2.   , 1.999, 2.004, 2.001, 1.999, 1.998,
       1.996, 2.004, 2.004, 1.989, 2.008, 2.008, 2.002, 2.001, 2.005,
       1.999, 1.994, 2.003, 2.005, 2.001, 2.002, 2.005, 2.004],
      dtype=float32)>, <tf.Variable 'leaf/PCEN/root:0' shape=(80,) dtype=float32, numpy=
array([1.997, 1.992, 1.986, 1.985, 1.991, 1.979, 2.006, 1.995, 2.004,
       2.001, 1.995, 1.995, 1.996, 2.01 , 2.   , 1.999, 2.006, 2.006,
       1.995, 2.009, 2.001, 2.01 , 1.996, 2.001, 1.998, 1.998, 2.004,
       2.005, 1.998, 2.006, 2.002, 2.009, 2.005, 1.997, 1.999, 2.003,
       1.997, 2.003, 2.005, 2.003, 1.989, 2.003, 2.01 , 2.007, 2.002,
       1.994, 1.979, 2.01 , 2.006, 1.995, 2.014, 2.006, 2.003, 1.999,
       2.005, 2.005, 2.001, 2.001, 1.999, 2.005, 2.002, 2.   , 1.999,
       1.996, 2.005, 2.004, 1.989, 2.009, 2.009, 2.002, 2.002, 2.004,
       1.999, 1.994, 2.004, 2.005, 2.001, 2.002, 2.006, 2.004],
      dtype=float32)>, <tf.Variable 'leaf/PCEN/EMA/smooth:0' shape=(80,) dtype=float32, numpy=
array([0.026, 0.046, 0.053, 0.046, 0.035, 0.038, 0.037, 0.055, 0.066,
       0.05 , 0.041, 0.065, 0.065, 0.061, 0.047, 0.037, 0.042, 0.037,
       0.046, 0.042, 0.056, 0.026, 0.052, 0.027, 0.028, 0.059, 0.052,
       0.048, 0.055, 0.056, 0.047, 0.055, 0.059, 0.04 , 0.054, 0.046,
       0.039, 0.05 , 0.053, 0.049, 0.04 , 0.042, 0.054, 0.057, 0.047,
       0.037, 0.049, 0.039, 0.039, 0.049, 0.038, 0.059, 0.062, 0.048,
       0.053, 0.054, 0.051, 0.054, 0.06 , 0.043, 0.039, 0.054, 0.063,
       0.05 , 0.046, 0.045, 0.047, 0.05 , 0.05 , 0.054, 0.045, 0.041,
       0.049, 0.039, 0.04 , 0.033, 0.048, 0.039, 0.056, 0.038],
      dtype=float32)>]
Post training weights
[<tf.Variable 'leaf/tfbanks_preemp/kernel:0' shape=(2, 1, 1) dtype=float32, numpy=
array([[[-0.851]],

       [[ 1.03 ]]], dtype=float32)>, <tf.Variable 'kernel:0' shape=(80, 2) dtype=float32, numpy=
array([[2.938e-02, 1.503e+02],
       [3.695e-02, 9.594e+01],
       [4.695e-02, 1.503e+02],
       [5.192e-02, 1.503e+02],
       [7.938e-02, 1.503e+02],
       [8.234e-02, 9.597e+01],
       [1.031e-01, 9.597e+01],
       [1.067e-01, 9.595e+01],
       [1.058e-01, 9.594e+01],
       [1.236e-01, 9.596e+01],
       [1.331e-01, 9.594e+01],
       [1.464e-01, 9.594e+01],
       [1.692e-01, 9.590e+01],
       [1.860e-01, 9.592e+01],
       [1.960e-01, 9.594e+01],
       [2.154e-01, 9.594e+01],
       [2.253e-01, 1.503e+02],
       [2.422e-01, 9.593e+01],
       [2.573e-01, 9.595e+01],
       [2.768e-01, 9.594e+01],
       [2.807e-01, 9.594e+01],
       [2.879e-01, 9.595e+01],
       [3.159e-01, 9.595e+01],
       [3.395e-01, 9.598e+01],
       [3.552e-01, 6.393e+01],
       [3.694e-01, 9.596e+01],
       [3.820e-01, 6.395e+01],
       [4.156e-01, 9.593e+01],
       [4.205e-01, 6.395e+01],
       [4.599e-01, 6.397e+01],
       [4.889e-01, 6.398e+01],
       [5.106e-01, 6.397e+01],
       [5.386e-01, 6.397e+01],
       [5.570e-01, 6.396e+01],
       [5.721e-01, 6.397e+01],
       [6.105e-01, 6.398e+01],
       [6.225e-01, 6.395e+01],
       [6.364e-01, 6.397e+01],
       [6.833e-01, 4.799e+01],
       [7.067e-01, 4.796e+01],
       [7.332e-01, 4.795e+01],
       [7.760e-01, 4.798e+01],
       [8.127e-01, 4.798e+01],
       [8.367e-01, 4.798e+01],
       [8.846e-01, 4.798e+01],
       [8.993e-01, 4.798e+01],
       [9.494e-01, 4.799e+01],
       [9.705e-01, 3.836e+01],
       [1.027e+00, 3.837e+01],
       [1.028e+00, 3.839e+01],
       [1.087e+00, 3.837e+01],
       [1.145e+00, 3.839e+01],
       [1.179e+00, 3.198e+01],
       [1.210e+00, 3.198e+01],
       [1.268e+00, 3.838e+01],
       [1.305e+00, 3.198e+01],
       [1.358e+00, 3.199e+01],
       [1.420e+00, 3.199e+01],
       [1.464e+00, 2.742e+01],
       [1.508e+00, 2.742e+01],
       [1.562e+00, 3.199e+01],
       [1.631e+00, 2.741e+01],
       [1.678e+00, 2.742e+01],
       [1.734e+00, 2.399e+01],
       [1.800e+00, 2.398e+01],
       [1.876e+00, 2.398e+01],
       [1.939e+00, 2.398e+01],
       [1.982e+00, 2.399e+01],
       [2.039e+00, 2.132e+01],
       [2.143e+00, 2.133e+01],
       [2.206e+00, 1.918e+01],
       [2.276e+00, 1.918e+01],
       [2.360e+00, 2.131e+01],
       [2.420e+00, 1.918e+01],
       [2.516e+00, 1.918e+01],
       [2.602e+00, 1.744e+01],
       [2.689e+00, 1.745e+01],
       [2.767e+00, 1.598e+01],
       [2.877e+00, 1.746e+01],
       [2.962e+00, 1.599e+01]], dtype=float32)>, <tf.Variable 'leaf/learnable_pooling/kernel:0' shape=(1, 1, 80, 1) dtype=float32, numpy=
array([[[[0.391],
         [0.4  ],
         [0.381],
         [0.386],
         [0.359],
         [0.353],
         [0.356],
         [0.379],
         [0.38 ],
         [0.372],
         [0.387],
         [0.375],
         [0.378],
         [0.422],
         [0.407],
         [0.423],
         [0.444],
         [0.413],
         [0.389],
         [0.389],
         [0.402],
         [0.434],
         [0.406],
         [0.397],
         [0.409],
         [0.42 ],
         [0.396],
         [0.42 ],
         [0.418],
         [0.396],
         [0.405],
         [0.4  ],
         [0.405],
         [0.421],
         [0.397],
         [0.385],
         [0.399],
         [0.413],
         [0.402],
         [0.399],
         [0.413],
         [0.413],
         [0.385],
         [0.384],
         [0.398],
         [0.411],
         [0.382],
         [0.423],
         [0.426],
         [0.405],
         [0.41 ],
         [0.403],
         [0.407],
         [0.395],
         [0.414],
         [0.419],
         [0.399],
         [0.401],
         [0.411],
         [0.399],
         [0.406],
         [0.41 ],
         [0.386],
         [0.397],
         [0.4  ],
         [0.398],
         [0.399],
         [0.388],
         [0.395],
         [0.384],
         [0.393],
         [0.392],
         [0.393],
         [0.393],
         [0.384],
         [0.387],
         [0.383],
         [0.387],
         [0.38 ],
         [0.394]]]], dtype=float32)>, <tf.Variable 'leaf/PCEN/alpha:0' shape=(80,) dtype=float32, numpy=
array([0.962, 0.962, 0.967, 0.952, 0.955, 0.965, 0.948, 0.959, 0.952,
       0.955, 0.958, 0.959, 0.963, 0.951, 0.962, 0.962, 0.952, 0.958,
       0.966, 0.951, 0.961, 0.948, 0.964, 0.956, 0.96 , 0.962, 0.955,
       0.956, 0.964, 0.956, 0.96 , 0.953, 0.958, 0.964, 0.962, 0.958,
       0.962, 0.958, 0.955, 0.957, 0.969, 0.956, 0.952, 0.957, 0.959,
       0.967, 0.981, 0.95 , 0.953, 0.965, 0.946, 0.955, 0.958, 0.961,
       0.957, 0.956, 0.96 , 0.959, 0.961, 0.956, 0.959, 0.961, 0.961,
       0.964, 0.956, 0.956, 0.971, 0.952, 0.952, 0.958, 0.959, 0.955,
       0.961, 0.966, 0.957, 0.955, 0.959, 0.958, 0.955, 0.956],
      dtype=float32)>, <tf.Variable 'leaf/PCEN/delta:0' shape=(80,) dtype=float32, numpy=
array([2.   , 1.995, 1.987, 1.992, 1.997, 1.985, 2.005, 1.994, 2.   ,
       1.997, 1.995, 1.997, 1.995, 2.009, 1.999, 1.999, 2.008, 2.002,
       1.993, 2.009, 1.999, 2.012, 1.996, 2.004, 2.001, 1.997, 2.005,
       2.004, 1.997, 2.004, 2.   , 2.006, 2.001, 1.994, 1.996, 2.001,
       1.997, 2.001, 2.005, 2.003, 1.993, 2.005, 2.007, 2.002, 2.001,
       1.994, 1.979, 2.01 , 2.007, 1.995, 2.014, 2.004, 2.001, 1.999,
       2.003, 2.004, 1.999, 2.   , 1.999, 2.004, 2.001, 1.999, 1.998,
       1.996, 2.004, 2.004, 1.989, 2.008, 2.008, 2.002, 2.001, 2.005,
       1.999, 1.994, 2.003, 2.005, 2.001, 2.002, 2.005, 2.004],
      dtype=float32)>, <tf.Variable 'leaf/PCEN/root:0' shape=(80,) dtype=float32, numpy=
array([1.997, 1.992, 1.986, 1.985, 1.991, 1.979, 2.006, 1.995, 2.004,
       2.001, 1.995, 1.995, 1.996, 2.01 , 2.   , 1.999, 2.006, 2.006,
       1.995, 2.009, 2.001, 2.01 , 1.996, 2.001, 1.998, 1.998, 2.004,
       2.005, 1.998, 2.006, 2.002, 2.009, 2.005, 1.997, 1.999, 2.003,
       1.997, 2.003, 2.005, 2.003, 1.989, 2.003, 2.01 , 2.007, 2.002,
       1.994, 1.979, 2.01 , 2.006, 1.995, 2.014, 2.006, 2.003, 1.999,
       2.005, 2.005, 2.001, 2.001, 1.999, 2.005, 2.002, 2.   , 1.999,
       1.996, 2.005, 2.004, 1.989, 2.009, 2.009, 2.002, 2.002, 2.004,
       1.999, 1.994, 2.004, 2.005, 2.001, 2.002, 2.006, 2.004],
      dtype=float32)>, <tf.Variable 'leaf/PCEN/EMA/smooth:0' shape=(80,) dtype=float32, numpy=
array([0.026, 0.046, 0.053, 0.046, 0.035, 0.038, 0.037, 0.055, 0.066,
       0.05 , 0.041, 0.065, 0.065, 0.061, 0.047, 0.037, 0.042, 0.037,
       0.046, 0.042, 0.056, 0.026, 0.052, 0.027, 0.028, 0.059, 0.052,
       0.048, 0.055, 0.056, 0.047, 0.055, 0.059, 0.04 , 0.054, 0.046,
       0.039, 0.05 , 0.053, 0.049, 0.04 , 0.042, 0.054, 0.057, 0.047,
       0.037, 0.049, 0.039, 0.039, 0.049, 0.038, 0.059, 0.062, 0.048,
       0.053, 0.054, 0.051, 0.054, 0.06 , 0.043, 0.039, 0.054, 0.063,
       0.05 , 0.046, 0.045, 0.047, 0.05 , 0.05 , 0.054, 0.045, 0.041,
       0.049, 0.039, 0.04 , 0.033, 0.048, 0.039, 0.056, 0.038],
      dtype=float32)>]/home/alirachidi/anaconda3/envs/LungSoundClass/lib/python3.7/site-packages/sklearn/metrics/_classification.py:1272: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/home/alirachidi/classification_algorithm/trainers/modules/main/global_helpers.py:48: UserWarning: Matplotlib is currently using agg, which is a non-GUI backend, so cannot show the figure.
  plt.show()
/home/alirachidi/classification_algorithm/trainers/modules/callbacks/visualizationCallback.py:32: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  print(np.array(self.model._frontend.weights) - np.array(self.first_weights))

Weight difference
[<tf.Tensor: shape=(2, 1, 1), dtype=float32, numpy=
 array([[[0.]],

        [[0.]]], dtype=float32)>
 <tf.Tensor: shape=(80, 2), dtype=float32, numpy=
 array([[0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.]], dtype=float32)>
 <tf.Tensor: shape=(1, 1, 80, 1), dtype=float32, numpy=
 array([[[[0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.]]]], dtype=float32)>
 <tf.Tensor: shape=(80,), dtype=float32, numpy=
 array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], dtype=float32)>
 <tf.Tensor: shape=(80,), dtype=float32, numpy=
 array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], dtype=float32)>
 <tf.Tensor: shape=(80,), dtype=float32, numpy=
 array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], dtype=float32)>
 <tf.Tensor: shape=(80,), dtype=float32, numpy=
 array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], dtype=float32)>   ]
