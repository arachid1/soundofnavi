Tensorflow Version: 2.8.0
Num GPUs Available:  1
Collecting Variables...
All variables have been collected.
../cache/
cw
train66
Description: crackles with diff params + mixing data
-----------------------
Job id is 1.
- Loading Perch.
3278 Perch audios have been loaded.
- Loading Icbhi.
725 Icbhi audios have been loaded.
- Loading Antwerp.
131 Antwerp audios have been loaded.
- Preparing Perch.
862 Perch groups of audio chunks (by filename or patients) have been prepared.
- Preparing Icbhi.
112 Icbhi groups of audio chunks (by filename or patients) have been prepared.
- Preparing Antwerp.
15 Antwerp groups of audio chunks (by filename or patients) have been prepared.
--- Samples are being split into training/val groups and de-grouped by patient ---
--- Perch training dataset went from 0 to 2649 elements, with 2346 none's, 61 crakles, 186 wheezes and 56 both ---
--- Perch Validation dataset contains 629 elements, with 551 none, 12 crackles, 54 wheezes and 12 both ---
--- Icbhi training dataset went from 0 to 2040 elements, with 707 none's, 720 crakles, 285 wheezes and 327 both ---
--- Icbhi Validation dataset contains 299 elements, with 172 none, 70 crackles, 18 wheezes and 39 both ---
--- Antwerp training dataset went from 0 to 580 elements, with 82 none's, 16 crakles, 448 wheezes and 34 both ---
--- Antwerp Validation dataset contains 111 elements, with 17 none, 10 crackles, 5 wheezes and 79 both ---
3908
1138
964
298
-----------------------
--- Final training dataset went from 0 to 5046 elements, with 3908 0's, 1138 1's and 0 others ---
--- Final Validation dataset contains 1262 elements, with 964 0's and 298 1's ---
Model: "leaf_model9_model"
______________________________________________________________________________________________________________
 Layer (type)                                    Output Shape                                Param #          
==============================================================================================================
 leaf (Leaf)                                     multiple                                    560              
                                                                                                              
 sequential (Sequential)                         (None, 80, 500, 1)                          4                
                                                                                                              
 sequential_1 (Sequential)                       (None, 80, 500, 16)                         2352             
                                                                                                              
 sequential_2 (Sequential)                       (None, 80, 500, 16)                         6448             
                                                                                                              
 sequential_3 (Sequential)                       (None, 80, 500, 16)                         32               
                                                                                                              
 concatenate (Concatenate)                       multiple                                    0                
                                                                                                              
 sequential_4 (Sequential)                       (None, 1)                                   6191809          
                                                                                                              
==============================================================================================================
Total params: 6,201,205
Trainable params: 6,159,699
Non-trainable params: 41,506
______________________________________________________________________________________________________________
Target metric is avg_accuracy
Epoch 1/25
Validation cm: [[964   0]
 [298   0]]
Validation normalized_cm: [[1. 0.]
 [1. 0.]]
Validation acc: 0.7638668779714739
Validation class_accuracies: [1.0, 0.0]
Validation precision: 0.0
Validation recall: 0.0
Validation f1: 0.0
Validation roc_auc: 0.46717744855050264
Validation avg_accuracy: 0.5
Validation one_indexed_epoch: 1
-- New best results were achieved. --
Patient Confusion matrix: 
 [[693   0]
 [ 47   0]] 
Patient Normalized Confusion matrix: 
 [[1. 0.]
 [1. 0.]] 
Patient Validation accuracy: 
 93.65 
Patient Validation class accuracies: 
 [1.0, 0.0] 
316/316 - 702s - loss: 0.5249 - accuracy: 0.7586 - 702s/epoch - 2s/step
Epoch 2/25
Validation cm: [[938  26]
 [255  43]]
Validation normalized_cm: [[0.973 0.027]
 [0.856 0.144]]
Validation acc: 0.777337559429477
Validation class_accuracies: [0.9730290456431535, 0.14429530201342283]
Validation precision: 0.6231884057971014
Validation recall: 0.14429530201342283
Validation f1: 0.2343324250681199
Validation roc_auc: 0.824097023030438
Validation avg_accuracy: 0.5586621738282882
Validation one_indexed_epoch: 2
-- New best results were achieved. --
Patient Confusion matrix: 
 [[677  16]
 [ 36  11]] 
Patient Normalized Confusion matrix: 
 [[0.977 0.023]
 [0.766 0.234]] 
Patient Validation accuracy: 
 92.97 
Patient Validation class accuracies: 
 [0.976911976911977, 0.23404255319148937] 
316/316 - 686s - loss: 0.4262 - accuracy: 0.7899 - 686s/epoch - 2s/step
Epoch 3/25
Validation cm: [[268 696]
 [ 17 281]]
Validation normalized_cm: [[0.278 0.722]
 [0.057 0.943]]
Validation acc: 0.43502377179080826
Validation class_accuracies: [0.27800829875518673, 0.9429530201342282]
Validation precision: 0.28761514841351077
Validation recall: 0.9429530201342282
Validation f1: 0.44078431372549026
Validation roc_auc: 0.7386483889832632
Validation avg_accuracy: 0.6104806594447074
Validation one_indexed_epoch: 3
-- New best results were achieved. --
Patient Confusion matrix: 
 [[244 449]
 [  7  40]] 
Patient Normalized Confusion matrix: 
 [[0.352 0.648]
 [0.149 0.851]] 
Patient Validation accuracy: 
 38.38 
Patient Validation class accuracies: 
 [0.35209235209235207, 0.851063829787234] 
316/316 - 684s - loss: 0.4209 - accuracy: 0.7838 - 684s/epoch - 2s/step
Epoch 4/25
Validation cm: [[839 125]
 [148 150]]
Validation normalized_cm: [[0.87  0.13 ]
 [0.497 0.503]]
Validation acc: 0.783676703645008
Validation class_accuracies: [0.8703319502074689, 0.5033557046979866]
Validation precision: 0.5454545454545454
Validation recall: 0.5033557046979866
Validation f1: 0.5235602094240838
Validation roc_auc: 0.8253049374808544
Validation avg_accuracy: 0.6868438274527278
Validation one_indexed_epoch: 4
-- New best results were achieved. --
Patient Confusion matrix: 
 [[653  40]
 [ 29  18]] 
Patient Normalized Confusion matrix: 
 [[0.942 0.058]
 [0.617 0.383]] 
Patient Validation accuracy: 
 90.68 
Patient Validation class accuracies: 
 [0.9422799422799423, 0.3829787234042553] 
316/316 - 683s - loss: 0.4023 - accuracy: 0.8008 - 683s/epoch - 2s/step
Epoch 5/25
Validation cm: [[931  33]
 [257  41]]
Validation normalized_cm: [[0.966 0.034]
 [0.862 0.138]]
Validation acc: 0.7702060221870047
Validation class_accuracies: [0.9657676348547718, 0.13758389261744966]
Validation precision: 0.5540540540540541
Validation recall: 0.13758389261744966
Validation f1: 0.22043010752688172
Validation roc_auc: 0.6973704363808517
Validation avg_accuracy: 0.5516757637361107
Validation one_indexed_epoch: 5
The validation tracker metric at 0.6868438274527278 hasn't increased by 0 in 1 epochs
316/316 - 683s - loss: 0.3849 - accuracy: 0.8078 - 683s/epoch - 2s/step
Epoch 6/25
Validation cm: [[937  27]
 [253  45]]
Validation normalized_cm: [[0.972 0.028]
 [0.849 0.151]]
Validation acc: 0.7781299524564184
Validation class_accuracies: [0.9719917012448133, 0.15100671140939598]
Validation precision: 0.625
Validation recall: 0.15100671140939598
Validation f1: 0.24324324324324326
Validation roc_auc: 0.712485031607675
Validation avg_accuracy: 0.5614992063271046
Validation one_indexed_epoch: 6
The validation tracker metric at 0.6868438274527278 hasn't increased by 0 in 2 epochs
316/316 - 682s - loss: 0.3827 - accuracy: 0.8054 - 682s/epoch - 2s/step
Epoch 7/25
Validation cm: [[804 160]
 [122 176]]
Validation normalized_cm: [[0.834 0.166]
 [0.409 0.591]]
Validation acc: 0.7765451664025357
Validation class_accuracies: [0.8340248962655602, 0.5906040268456376]
Validation precision: 0.5238095238095238
Validation recall: 0.5906040268456376
Validation f1: 0.555205047318612
Validation roc_auc: 0.8256600016708905
Validation avg_accuracy: 0.712314461555599
Validation one_indexed_epoch: 7
-- New best results were achieved. --
Patient Confusion matrix: 
 [[628  65]
 [ 25  22]] 
Patient Normalized Confusion matrix: 
 [[0.906 0.094]
 [0.532 0.468]] 
Patient Validation accuracy: 
 87.84 
Patient Validation class accuracies: 
 [0.9062049062049062, 0.46808510638297873] 
316/316 - 686s - loss: 0.3635 - accuracy: 0.8236 - 686s/epoch - 2s/step
Epoch 8/25
Validation cm: [[761 203]
 [ 67 231]]
Validation normalized_cm: [[0.789 0.211]
 [0.225 0.775]]
Validation acc: 0.786053882725832
Validation class_accuracies: [0.7894190871369294, 0.7751677852348994]
Validation precision: 0.532258064516129
Validation recall: 0.7751677852348994
Validation f1: 0.6311475409836065
Validation roc_auc: 0.8438727060068507
Validation avg_accuracy: 0.7822934361859144
Validation one_indexed_epoch: 8
-- New best results were achieved. --
Patient Confusion matrix: 
 [[635  58]
 [ 24  23]] 
Patient Normalized Confusion matrix: 
 [[0.916 0.084]
 [0.511 0.489]] 
Patient Validation accuracy: 
 88.92 
Patient Validation class accuracies: 
 [0.9163059163059163, 0.48936170212765956] 
316/316 - 685s - loss: 0.3499 - accuracy: 0.8363 - 685s/epoch - 2s/step
Epoch 9/25
Validation cm: [[887  77]
 [184 114]]
Validation normalized_cm: [[0.92  0.08 ]
 [0.617 0.383]]
Validation acc: 0.7931854199683043
Validation class_accuracies: [0.9201244813278008, 0.3825503355704698]
Validation precision: 0.5968586387434555
Validation recall: 0.3825503355704698
Validation f1: 0.4662576687116564
Validation roc_auc: 0.8264049402656715
Validation avg_accuracy: 0.6513374084491352
Validation one_indexed_epoch: 9
The validation tracker metric at 0.7822934361859144 hasn't increased by 0 in 1 epochs
316/316 - 681s - loss: 0.3435 - accuracy: 0.8409 - 681s/epoch - 2s/step
Epoch 10/25
Validation cm: [[800 164]
 [ 77 221]]
Validation normalized_cm: [[0.83  0.17 ]
 [0.258 0.742]]
Validation acc: 0.8090332805071315
Validation class_accuracies: [0.8298755186721992, 0.7416107382550335]
Validation precision: 0.574025974025974
Validation recall: 0.7416107382550335
Validation f1: 0.6471449487554904
Validation roc_auc: 0.878334818569161
Validation avg_accuracy: 0.7857431284636164
Validation one_indexed_epoch: 10
-- New best results were achieved. --
Patient Confusion matrix: 
 [[648  45]
 [ 25  22]] 
Patient Normalized Confusion matrix: 
 [[0.935 0.065]
 [0.532 0.468]] 
Patient Validation accuracy: 
 90.54 
Patient Validation class accuracies: 
 [0.935064935064935, 0.46808510638297873] 
316/316 - 685s - loss: 0.3237 - accuracy: 0.8508 - 685s/epoch - 2s/step
Epoch 11/25
Validation cm: [[942  22]
 [255  43]]
Validation normalized_cm: [[0.977 0.023]
 [0.856 0.144]]
Validation acc: 0.7805071315372425
Validation class_accuracies: [0.9771784232365145, 0.14429530201342283]
Validation precision: 0.6615384615384615
Validation recall: 0.14429530201342283
Validation f1: 0.2369146005509642
Validation roc_auc: 0.8029637416803587
Validation avg_accuracy: 0.5607368626249687
Validation one_indexed_epoch: 11
The validation tracker metric at 0.7857431284636164 hasn't increased by 0 in 1 epochs
316/316 - 680s - loss: 0.3189 - accuracy: 0.8524 - 680s/epoch - 2s/step
Epoch 12/25
Validation cm: [[942  22]
 [209  89]]
Validation normalized_cm: [[0.977 0.023]
 [0.701 0.299]]
Validation acc: 0.8169572107765452
Validation class_accuracies: [0.9771784232365145, 0.2986577181208054]
Validation precision: 0.8018018018018018
Validation recall: 0.2986577181208054
Validation f1: 0.4352078239608802
Validation roc_auc: 0.8450075190063773
Validation avg_accuracy: 0.6379180706786599
Validation one_indexed_epoch: 12
The validation tracker metric at 0.7857431284636164 hasn't increased by 0 in 2 epochs
316/316 - 683s - loss: 0.3149 - accuracy: 0.8512 - 683s/epoch - 2s/step
Epoch 13/25
Validation cm: [[634 330]
 [ 27 271]]
Validation normalized_cm: [[0.658 0.342]
 [0.091 0.909]]
Validation acc: 0.7171156893819335
Validation class_accuracies: [0.6576763485477178, 0.9093959731543624]
Validation precision: 0.4509151414309484
Validation recall: 0.9093959731543624
Validation f1: 0.6028921023359287
Validation roc_auc: 0.8648858921161825
Validation avg_accuracy: 0.78353616085104
Validation one_indexed_epoch: 13
The validation tracker metric at 0.7857431284636164 hasn't increased by 0 in 3 epochs
316/316 - 683s - loss: 0.2917 - accuracy: 0.8742 - 683s/epoch - 2s/step
Epoch 14/25
Validation cm: [[848 116]
 [136 162]]
Validation normalized_cm: [[0.88  0.12 ]
 [0.456 0.544]]
Validation acc: 0.8003169572107766
Validation class_accuracies: [0.8796680497925311, 0.5436241610738255]
Validation precision: 0.5827338129496403
Validation recall: 0.5436241610738255
Validation f1: 0.5625
Validation roc_auc: 0.8459717619538276
Validation avg_accuracy: 0.7116461054331783
Validation one_indexed_epoch: 14
The validation tracker metric at 0.7857431284636164 hasn't increased by 0 in 4 epochs
316/316 - 683s - loss: 0.3048 - accuracy: 0.8642 - 683s/epoch - 2s/step
Epoch 15/25
Validation cm: [[958   6]
 [259  39]]
Validation normalized_cm: [[0.994 0.006]
 [0.869 0.131]]
Validation acc: 0.7900158478605388
Validation class_accuracies: [0.9937759336099585, 0.13087248322147652]
Validation precision: 0.8666666666666667
Validation recall: 0.13087248322147652
Validation f1: 0.2274052478134111
Validation roc_auc: 0.8503474059427998
Validation avg_accuracy: 0.5623242084157175
Validation one_indexed_epoch: 15
The validation tracker metric at 0.7857431284636164 hasn't increased by 0 in 5 epochs
316/316 - 682s - loss: 0.2802 - accuracy: 0.8777 - 682s/epoch - 2s/step
Epoch 16/25
Validation cm: [[780 184]
 [ 74 224]]
Validation normalized_cm: [[0.809 0.191]
 [0.248 0.752]]
Validation acc: 0.7955625990491284
Validation class_accuracies: [0.8091286307053942, 0.7516778523489933]
Validation precision: 0.5490196078431373
Validation recall: 0.7516778523489933
Validation f1: 0.6345609065155807
Validation roc_auc: 0.8690822634994013
Validation avg_accuracy: 0.7804032415271938
Validation one_indexed_epoch: 16
The validation tracker metric at 0.7857431284636164 hasn't increased by 0 in 6 epochs
316/316 - 642s - loss: 0.2703 - accuracy: 0.8793 - 642s/epoch - 2s/step
Epoch 17/25
Validation cm: [[920  44]
 [195 103]]
Validation normalized_cm: [[0.954 0.046]
 [0.654 0.346]]
Validation acc: 0.8106180665610143
Validation class_accuracies: [0.9543568464730291, 0.34563758389261745]
Validation precision: 0.7006802721088435
Validation recall: 0.34563758389261745
Validation f1: 0.46292134831460674
Validation roc_auc: 0.8549527973488541
Validation avg_accuracy: 0.6499972151828233
Validation one_indexed_epoch: 17
The validation tracker metric at 0.7857431284636164 hasn't increased by 0 in 7 epochs
316/316 - 626s - loss: 0.2493 - accuracy: 0.8900 - 626s/epoch - 2s/step
Epoch 18/25
Validation cm: [[932  32]
 [214  84]]
Validation normalized_cm: [[0.967 0.033]
 [0.718 0.282]]
Validation acc: 0.8050713153724247
Validation class_accuracies: [0.966804979253112, 0.28187919463087246]
Validation precision: 0.7241379310344828
Validation recall: 0.28187919463087246
Validation f1: 0.40579710144927533
Validation roc_auc: 0.8457733437299841
Validation avg_accuracy: 0.6243420869419922
Validation one_indexed_epoch: 18
The validation tracker metric at 0.7857431284636164 hasn't increased by 0 in 8 epochs
316/316 - 625s - loss: 0.2440 - accuracy: 0.8960 - 625s/epoch - 2s/step
Epoch 19/25
Validation cm: [[829 135]
 [ 79 219]]
Validation normalized_cm: [[0.86  0.14 ]
 [0.265 0.735]]
Validation acc: 0.8304278922345484
Validation class_accuracies: [0.8599585062240664, 0.7348993288590604]
Validation precision: 0.6186440677966102
Validation recall: 0.7348993288590604
Validation f1: 0.6717791411042944
Validation roc_auc: 0.8888022501322788
Validation avg_accuracy: 0.7974289175415634
Validation one_indexed_epoch: 19
-- New best results were achieved. --
Patient Confusion matrix: 
 [[622  71]
 [ 12  35]] 
Patient Normalized Confusion matrix: 
 [[0.898 0.102]
 [0.255 0.745]] 
Patient Validation accuracy: 
 88.78 
Patient Validation class accuracies: 
 [0.8975468975468975, 0.7446808510638298] 
316/316 - 628s - loss: 0.2331 - accuracy: 0.8969 - 628s/epoch - 2s/step
Epoch 20/25
Validation cm: [[894  70]
 [141 157]]
Validation normalized_cm: [[0.927 0.073]
 [0.473 0.527]]
Validation acc: 0.8328050713153724
Validation class_accuracies: [0.9273858921161826, 0.5268456375838926]
Validation precision: 0.6916299559471366
Validation recall: 0.5268456375838926
Validation f1: 0.598095238095238
Validation roc_auc: 0.8620157899133921
Validation avg_accuracy: 0.7271157648500376
Validation one_indexed_epoch: 20
The validation tracker metric at 0.7974289175415634 hasn't increased by 0 in 1 epochs
316/316 - 626s - loss: 0.2262 - accuracy: 0.9104 - 626s/epoch - 2s/step
Epoch 21/25
Validation cm: [[814 150]
 [ 81 217]]
Validation normalized_cm: [[0.844 0.156]
 [0.272 0.728]]
Validation acc: 0.8169572107765452
Validation class_accuracies: [0.8443983402489627, 0.7281879194630873]
Validation precision: 0.5912806539509536
Validation recall: 0.7281879194630873
Validation f1: 0.6526315789473685
Validation roc_auc: 0.8779588682502995
Validation avg_accuracy: 0.786293129856025
Validation one_indexed_epoch: 21
The validation tracker metric at 0.7974289175415634 hasn't increased by 0 in 2 epochs
316/316 - 627s - loss: 0.2045 - accuracy: 0.9158 - 627s/epoch - 2s/step
Epoch 22/25
Validation cm: [[858 106]
 [109 189]]
Validation normalized_cm: [[0.89  0.11 ]
 [0.366 0.634]]
Validation acc: 0.8296354992076069
Validation class_accuracies: [0.8900414937759336, 0.6342281879194631]
Validation precision: 0.6406779661016949
Validation recall: 0.6342281879194631
Validation f1: 0.6374367622259697
Validation roc_auc: 0.8862924336517307
Validation avg_accuracy: 0.7621348408476983
Validation one_indexed_epoch: 22
The validation tracker metric at 0.7974289175415634 hasn't increased by 0 in 3 epochs
316/316 - 650s - loss: 0.1878 - accuracy: 0.9251 - 650s/epoch - 2s/step
Epoch 23/25
Validation cm: [[810 154]
 [ 74 224]]
Validation normalized_cm: [[0.84  0.16 ]
 [0.248 0.752]]
Validation acc: 0.8193343898573693
Validation class_accuracies: [0.8402489626556017, 0.7516778523489933]
Validation precision: 0.5925925925925926
Validation recall: 0.7516778523489933
Validation f1: 0.6627218934911243
Validation roc_auc: 0.8891712384081984
Validation avg_accuracy: 0.7959634075022974
Validation one_indexed_epoch: 23
The validation tracker metric at 0.7974289175415634 hasn't increased by 0 in 4 epochs
316/316 - 634s - loss: 0.1842 - accuracy: 0.9259 - 634s/epoch - 2s/step
Epoch 24/25
Validation cm: [[869  95]
 [102 196]]
Validation normalized_cm: [[0.901 0.099]
 [0.342 0.658]]
Validation acc: 0.8438985736925515
Validation class_accuracies: [0.9014522821576764, 0.6577181208053692]
Validation precision: 0.6735395189003437
Validation recall: 0.6577181208053692
Validation f1: 0.6655348047538201
Validation roc_auc: 0.8878693363780669
Validation avg_accuracy: 0.7795852014815228
Validation one_indexed_epoch: 24
The validation tracker metric at 0.7974289175415634 hasn't increased by 0 in 5 epochs
316/316 - 662s - loss: 0.1615 - accuracy: 0.9354 - 662s/epoch - 2s/step
Epoch 25/25
Validation cm: [[800 164]
 [ 50 248]]
Validation normalized_cm: [[0.83  0.17 ]
 [0.168 0.832]]
Validation acc: 0.8304278922345484
Validation class_accuracies: [0.8298755186721992, 0.8322147651006712]
Validation precision: 0.6019417475728155
Validation recall: 0.8322147651006712
Validation f1: 0.6985915492957746
Validation roc_auc: 0.9090304658999137
Validation avg_accuracy: 0.8310451418864352
Validation one_indexed_epoch: 25
-- New best results were achieved. --
Patient Confusion matrix: 
 [[622  71]
 [ 12  35]] 
Patient Normalized Confusion matrix: 
 [[0.898 0.102]
 [0.255 0.745]] 
Patient Validation accuracy: 
 88.78 
Patient Validation class accuracies: 
 [0.8975468975468975, 0.7446808510638298] 
316/316 - 634s - loss: 0.1480 - accuracy: 0.9396 - 634s/epoch - 2s/step
----------------------------------
The best metrics for this job are: 

Best avg_accuracy: 0.8310451418864352
Best cm: [[800 164]
 [ 50 248]]
Best normalized_cm: [[0.83  0.17 ]
 [0.168 0.832]]
Best acc: 0.8304278922345484
Best class_accuracies: [0.8298755186721992, 0.8322147651006712]
Best precision: 0.6019417475728155
Best recall: 0.8322147651006712
Best f1: 0.6985915492957746
Best roc_auc: 0.9090304658999137
Best one_indexed_epoch: 25
Best patient_cm: [[622  71]
 [ 12  35]]
avg_accuracy
model
cm
normalized_cm
acc
class_accuracies
precision
recall
f1
roc_auc
one_indexed_epoch
patient_cm
Initial weights
[<tf.Variable 'kernel:0' shape=(80, 2) dtype=float32, numpy=
array([[4.134e-02, 1.503e+02],
       [3.014e-02, 9.595e+01],
       [5.017e-02, 1.503e+02],
       [5.387e-02, 1.503e+02],
       [6.574e-02, 1.503e+02],
       [8.693e-02, 9.595e+01],
       [9.175e-02, 9.592e+01],
       [9.288e-02, 9.590e+01],
       [1.135e-01, 9.589e+01],
       [1.217e-01, 9.590e+01],
       [1.351e-01, 9.591e+01],
       [1.473e-01, 9.590e+01],
       [1.667e-01, 9.592e+01],
       [1.923e-01, 9.593e+01],
       [2.032e-01, 9.595e+01],
       [2.089e-01, 9.594e+01],
       [2.217e-01, 1.503e+02],
       [2.318e-01, 9.593e+01],
       [2.478e-01, 9.596e+01],
       [2.664e-01, 9.595e+01],
       [2.852e-01, 9.598e+01],
       [2.882e-01, 9.596e+01],
       [3.199e-01, 9.595e+01],
       [3.326e-01, 9.597e+01],
       [3.611e-01, 6.396e+01],
       [3.603e-01, 9.597e+01],
       [3.898e-01, 6.395e+01],
       [4.231e-01, 9.597e+01],
       [4.300e-01, 6.396e+01],
       [4.528e-01, 6.398e+01],
       [4.792e-01, 6.398e+01],
       [5.036e-01, 6.396e+01],
       [5.317e-01, 6.397e+01],
       [5.446e-01, 6.394e+01],
       [5.789e-01, 6.397e+01],
       [6.154e-01, 6.396e+01],
       [6.209e-01, 6.397e+01],
       [6.620e-01, 6.396e+01],
       [6.676e-01, 4.798e+01],
       [7.121e-01, 4.797e+01],
       [7.272e-01, 4.796e+01],
       [7.711e-01, 4.796e+01],
       [8.112e-01, 4.798e+01],
       [8.237e-01, 4.798e+01],
       [8.738e-01, 4.798e+01],
       [9.031e-01, 4.798e+01],
       [9.304e-01, 4.796e+01],
       [9.648e-01, 3.840e+01],
       [1.009e+00, 3.837e+01],
       [1.045e+00, 3.838e+01],
       [1.088e+00, 3.838e+01],
       [1.140e+00, 3.839e+01],
       [1.171e+00, 3.196e+01],
       [1.210e+00, 3.197e+01],
       [1.260e+00, 3.838e+01],
       [1.309e+00, 3.197e+01],
       [1.376e+00, 3.200e+01],
       [1.411e+00, 3.198e+01],
       [1.459e+00, 2.741e+01],
       [1.512e+00, 2.742e+01],
       [1.556e+00, 3.198e+01],
       [1.624e+00, 2.741e+01],
       [1.685e+00, 2.741e+01],
       [1.724e+00, 2.398e+01],
       [1.789e+00, 2.399e+01],
       [1.877e+00, 2.398e+01],
       [1.918e+00, 2.398e+01],
       [1.987e+00, 2.399e+01],
       [2.055e+00, 2.132e+01],
       [2.138e+00, 2.133e+01],
       [2.187e+00, 1.919e+01],
       [2.266e+00, 1.918e+01],
       [2.360e+00, 2.133e+01],
       [2.432e+00, 1.919e+01],
       [2.525e+00, 1.920e+01],
       [2.598e+00, 1.745e+01],
       [2.701e+00, 1.746e+01],
       [2.768e+00, 1.599e+01],
       [2.877e+00, 1.746e+01],
       [2.973e+00, 1.599e+01]], dtype=float32)>, <tf.Variable 'leaf/learnable_pooling/kernel:0' shape=(1, 1, 80, 1) dtype=float32, numpy=
array([[[[0.365],
         [0.398],
         [0.386],
         [0.376],
         [0.421],
         [0.393],
         [0.381],
         [0.374],
         [0.387],
         [0.371],
         [0.403],
         [0.385],
         [0.402],
         [0.392],
         [0.403],
         [0.386],
         [0.394],
         [0.4  ],
         [0.405],
         [0.406],
         [0.403],
         [0.4  ],
         [0.405],
         [0.416],
         [0.395],
         [0.412],
         [0.397],
         [0.406],
         [0.411],
         [0.382],
         [0.38 ],
         [0.374],
         [0.395],
         [0.419],
         [0.424],
         [0.401],
         [0.401],
         [0.414],
         [0.409],
         [0.397],
         [0.397],
         [0.418],
         [0.375],
         [0.383],
         [0.408],
         [0.405],
         [0.414],
         [0.403],
         [0.409],
         [0.404],
         [0.404],
         [0.388],
         [0.413],
         [0.407],
         [0.402],
         [0.415],
         [0.393],
         [0.405],
         [0.401],
         [0.398],
         [0.398],
         [0.402],
         [0.4  ],
         [0.401],
         [0.398],
         [0.403],
         [0.401],
         [0.393],
         [0.395],
         [0.389],
         [0.394],
         [0.399],
         [0.386],
         [0.388],
         [0.38 ],
         [0.39 ],
         [0.384],
         [0.394],
         [0.379],
         [0.402]]]], dtype=float32)>, <tf.Variable 'leaf/PCEN/alpha:0' shape=(80,) dtype=float32, numpy=
array([0.966, 0.98 , 0.975, 0.977, 0.951, 0.971, 0.958, 0.965, 0.948,
       0.946, 0.959, 0.963, 0.96 , 0.957, 0.966, 0.974, 0.964, 0.978,
       0.96 , 0.954, 0.961, 0.955, 0.952, 0.95 , 0.959, 0.954, 0.958,
       0.96 , 0.969, 0.953, 0.956, 0.96 , 0.967, 0.967, 0.961, 0.959,
       0.96 , 0.949, 0.957, 0.96 , 0.964, 0.954, 0.959, 0.955, 0.953,
       0.964, 0.954, 0.95 , 0.96 , 0.964, 0.958, 0.95 , 0.951, 0.959,
       0.97 , 0.955, 0.962, 0.961, 0.957, 0.966, 0.954, 0.96 , 0.95 ,
       0.959, 0.956, 0.951, 0.953, 0.959, 0.967, 0.964, 0.957, 0.954,
       0.964, 0.96 , 0.96 , 0.95 , 0.961, 0.954, 0.962, 0.96 ],
      dtype=float32)>, <tf.Variable 'leaf/PCEN/delta:0' shape=(80,) dtype=float32, numpy=
array([1.999, 1.993, 1.991, 1.992, 1.995, 1.977, 1.989, 1.989, 2.   ,
       2.004, 1.987, 1.986, 1.983, 1.999, 1.983, 1.984, 2.   , 1.985,
       2.001, 2.004, 1.998, 2.004, 2.009, 2.01 , 2.001, 2.005, 2.003,
       2.   , 1.992, 2.006, 2.002, 1.999, 1.992, 1.993, 1.999, 2.   ,
       2.   , 2.01 , 2.002, 1.999, 1.995, 2.006, 2.001, 2.005, 2.007,
       1.996, 2.006, 2.01 , 2.   , 1.996, 2.002, 2.01 , 2.009, 2.001,
       1.99 , 2.006, 1.998, 1.999, 2.003, 1.994, 2.006, 2.   , 2.009,
       2.001, 2.004, 2.009, 2.007, 2.001, 1.992, 1.996, 2.003, 2.006,
       1.996, 2.   , 2.   , 2.01 , 1.999, 2.006, 1.998, 2.   ],
      dtype=float32)>, <tf.Variable 'leaf/PCEN/root:0' shape=(80,) dtype=float32, numpy=
array([1.996, 1.987, 1.981, 1.981, 1.993, 1.971, 1.98 , 1.977, 2.003,
       2.009, 1.991, 1.988, 1.996, 2.017, 1.99 , 1.991, 1.999, 1.978,
       2.001, 2.004, 2.002, 2.003, 2.009, 2.009, 1.999, 2.004, 2.004,
       2.001, 1.994, 2.011, 2.005, 2.001, 1.995, 1.994, 2.   , 2.002,
       2.   , 2.013, 2.007, 2.   , 1.991, 2.001, 1.999, 2.01 , 2.01 ,
       1.997, 2.007, 2.008, 2.   , 1.996, 2.002, 2.01 , 2.008, 2.001,
       1.99 , 2.005, 1.998, 1.999, 2.004, 1.994, 2.006, 2.   , 2.009,
       2.   , 2.004, 2.009, 2.006, 2.001, 1.993, 1.996, 2.004, 2.006,
       1.996, 2.   , 2.   , 2.011, 1.999, 2.006, 1.999, 2.   ],
      dtype=float32)>, <tf.Variable 'leaf/PCEN/EMA/smooth:0' shape=(80,) dtype=float32, numpy=
array([0.043, 0.031, 0.044, 0.045, 0.024, 0.03 , 0.025, 0.042, 0.038,
       0.04 , 0.048, 0.052, 0.048, 0.053, 0.055, 0.068, 0.034, 0.03 ,
       0.049, 0.057, 0.055, 0.057, 0.05 , 0.031, 0.039, 0.043, 0.05 ,
       0.039, 0.036, 0.042, 0.052, 0.047, 0.049, 0.037, 0.07 , 0.044,
       0.045, 0.059, 0.042, 0.06 , 0.034, 0.038, 0.043, 0.04 , 0.051,
       0.044, 0.036, 0.044, 0.037, 0.045, 0.039, 0.045, 0.041, 0.044,
       0.035, 0.038, 0.04 , 0.038, 0.033, 0.036, 0.035, 0.036, 0.032,
       0.036, 0.035, 0.039, 0.041, 0.041, 0.045, 0.041, 0.046, 0.041,
       0.035, 0.039, 0.044, 0.044, 0.054, 0.043, 0.065, 0.038],
      dtype=float32)>]
Post training weights
[<tf.Variable 'kernel:0' shape=(80, 2) dtype=float32, numpy=
array([[4.134e-02, 1.503e+02],
       [3.014e-02, 9.595e+01],
       [5.017e-02, 1.503e+02],
       [5.387e-02, 1.503e+02],
       [6.574e-02, 1.503e+02],
       [8.693e-02, 9.595e+01],
       [9.175e-02, 9.592e+01],
       [9.288e-02, 9.590e+01],
       [1.135e-01, 9.589e+01],
       [1.217e-01, 9.590e+01],
       [1.351e-01, 9.591e+01],
       [1.473e-01, 9.590e+01],
       [1.667e-01, 9.592e+01],
       [1.923e-01, 9.593e+01],
       [2.032e-01, 9.595e+01],
       [2.089e-01, 9.594e+01],
       [2.217e-01, 1.503e+02],
       [2.318e-01, 9.593e+01],
       [2.478e-01, 9.596e+01],
       [2.664e-01, 9.595e+01],
       [2.852e-01, 9.598e+01],
       [2.882e-01, 9.596e+01],
       [3.199e-01, 9.595e+01],
       [3.326e-01, 9.597e+01],
       [3.611e-01, 6.396e+01],
       [3.603e-01, 9.597e+01],
       [3.898e-01, 6.395e+01],
       [4.231e-01, 9.597e+01],
       [4.300e-01, 6.396e+01],
       [4.528e-01, 6.398e+01],
       [4.792e-01, 6.398e+01],
       [5.036e-01, 6.396e+01],
       [5.317e-01, 6.397e+01],
       [5.446e-01, 6.394e+01],
       [5.789e-01, 6.397e+01],
       [6.154e-01, 6.396e+01],
       [6.209e-01, 6.397e+01],
       [6.620e-01, 6.396e+01],
       [6.676e-01, 4.798e+01],
       [7.121e-01, 4.797e+01],
       [7.272e-01, 4.796e+01],
       [7.711e-01, 4.796e+01],
       [8.112e-01, 4.798e+01],
       [8.237e-01, 4.798e+01],
       [8.738e-01, 4.798e+01],
       [9.031e-01, 4.798e+01],
       [9.304e-01, 4.796e+01],
       [9.648e-01, 3.840e+01],
       [1.009e+00, 3.837e+01],
       [1.045e+00, 3.838e+01],
       [1.088e+00, 3.838e+01],
       [1.140e+00, 3.839e+01],
       [1.171e+00, 3.196e+01],
       [1.210e+00, 3.197e+01],
       [1.260e+00, 3.838e+01],
       [1.309e+00, 3.197e+01],
       [1.376e+00, 3.200e+01],
       [1.411e+00, 3.198e+01],
       [1.459e+00, 2.741e+01],
       [1.512e+00, 2.742e+01],
       [1.556e+00, 3.198e+01],
       [1.624e+00, 2.741e+01],
       [1.685e+00, 2.741e+01],
       [1.724e+00, 2.398e+01],
       [1.789e+00, 2.399e+01],
       [1.877e+00, 2.398e+01],
       [1.918e+00, 2.398e+01],
       [1.987e+00, 2.399e+01],
       [2.055e+00, 2.132e+01],
       [2.138e+00, 2.133e+01],
       [2.187e+00, 1.919e+01],
       [2.266e+00, 1.918e+01],
       [2.360e+00, 2.133e+01],
       [2.432e+00, 1.919e+01],
       [2.525e+00, 1.920e+01],
       [2.598e+00, 1.745e+01],
       [2.701e+00, 1.746e+01],
       [2.768e+00, 1.599e+01],
       [2.877e+00, 1.746e+01],
       [2.973e+00, 1.599e+01]], dtype=float32)>, <tf.Variable 'leaf/learnable_pooling/kernel:0' shape=(1, 1, 80, 1) dtype=float32, numpy=
array([[[[0.365],
         [0.398],
         [0.386],
         [0.376],
         [0.421],
         [0.393],
         [0.381],
         [0.374],
         [0.387],
         [0.371],
         [0.403],
         [0.385],
         [0.402],
         [0.392],
         [0.403],
         [0.386],
         [0.394],
         [0.4  ],
         [0.405],
         [0.406],
         [0.403],
         [0.4  ],
         [0.405],
         [0.416],
         [0.395],
         [0.412],
         [0.397],
         [0.406],
         [0.411],
         [0.382],
         [0.38 ],
         [0.374],
         [0.395],
         [0.419],
         [0.424],
         [0.401],
         [0.401],
         [0.414],
         [0.409],
         [0.397],
         [0.397],
         [0.418],
         [0.375],
         [0.383],
         [0.408],
         [0.405],
         [0.414],
         [0.403],
         [0.409],
         [0.404],
         [0.404],
         [0.388],
         [0.413],
         [0.407],
         [0.402],
         [0.415],
         [0.393],
         [0.405],
         [0.401],
         [0.398],
         [0.398],
         [0.402],
         [0.4  ],
         [0.401],
         [0.398],
         [0.403],
         [0.401],
         [0.393],
         [0.395],
         [0.389],
         [0.394],
         [0.399],
         [0.386],
         [0.388],
         [0.38 ],
         [0.39 ],
         [0.384],
         [0.394],
         [0.379],
         [0.402]]]], dtype=float32)>, <tf.Variable 'leaf/PCEN/alpha:0' shape=(80,) dtype=float32, numpy=
array([0.966, 0.98 , 0.975, 0.977, 0.951, 0.971, 0.958, 0.965, 0.948,
       0.946, 0.959, 0.963, 0.96 , 0.957, 0.966, 0.974, 0.964, 0.978,
       0.96 , 0.954, 0.961, 0.955, 0.952, 0.95 , 0.959, 0.954, 0.958,
       0.96 , 0.969, 0.953, 0.956, 0.96 , 0.967, 0.967, 0.961, 0.959,
       0.96 , 0.949, 0.957, 0.96 , 0.964, 0.954, 0.959, 0.955, 0.953,
       0.964, 0.954, 0.95 , 0.96 , 0.964, 0.958, 0.95 , 0.951, 0.959,
       0.97 , 0.955, 0.962, 0.961, 0.957, 0.966, 0.954, 0.96 , 0.95 ,
       0.959, 0.956, 0.951, 0.953, 0.959, 0.967, 0.964, 0.957, 0.954,
       0.964, 0.96 , 0.96 , 0.95 , 0.961, 0.954, 0.962, 0.96 ],
      dtype=float32)>, <tf.Variable 'leaf/PCEN/delta:0' shape=(80,) dtype=float32, numpy=
array([1.999, 1.993, 1.991, 1.992, 1.995, 1.977, 1.989, 1.989, 2.   ,
       2.004, 1.987, 1.986, 1.983, 1.999, 1.983, 1.984, 2.   , 1.985,
       2.001, 2.004, 1.998, 2.004, 2.009, 2.01 , 2.001, 2.005, 2.003,
       2.   , 1.992, 2.006, 2.002, 1.999, 1.992, 1.993, 1.999, 2.   ,
       2.   , 2.01 , 2.002, 1.999, 1.995, 2.006, 2.001, 2.005, 2.007,
       1.996, 2.006, 2.01 , 2.   , 1.996, 2.002, 2.01 , 2.009, 2.001,
       1.99 , 2.006, 1.998, 1.999, 2.003, 1.994, 2.006, 2.   , 2.009,
       2.001, 2.004, 2.009, 2.007, 2.001, 1.992, 1.996, 2.003, 2.006,
       1.996, 2.   , 2.   , 2.01 , 1.999, 2.006, 1.998, 2.   ],
      dtype=float32)>, <tf.Variable 'leaf/PCEN/root:0' shape=(80,) dtype=float32, numpy=
array([1.996, 1.987, 1.981, 1.981, 1.993, 1.971, 1.98 , 1.977, 2.003,
       2.009, 1.991, 1.988, 1.996, 2.017, 1.99 , 1.991, 1.999, 1.978,
       2.001, 2.004, 2.002, 2.003, 2.009, 2.009, 1.999, 2.004, 2.004,
       2.001, 1.994, 2.011, 2.005, 2.001, 1.995, 1.994, 2.   , 2.002,
       2.   , 2.013, 2.007, 2.   , 1.991, 2.001, 1.999, 2.01 , 2.01 ,
       1.997, 2.007, 2.008, 2.   , 1.996, 2.002, 2.01 , 2.008, 2.001,
       1.99 , 2.005, 1.998, 1.999, 2.004, 1.994, 2.006, 2.   , 2.009,
       2.   , 2.004, 2.009, 2.006, 2.001, 1.993, 1.996, 2.004, 2.006,
       1.996, 2.   , 2.   , 2.011, 1.999, 2.006, 1.999, 2.   ],
      dtype=float32)>, <tf.Variable 'leaf/PCEN/EMA/smooth:0' shape=(80,) dtype=float32, numpy=
array([0.043, 0.031, 0.044, 0.045, 0.024, 0.03 , 0.025, 0.042, 0.038,
       0.04 , 0.048, 0.052, 0.048, 0.053, 0.055, 0.068, 0.034, 0.03 ,
       0.049, 0.057, 0.055, 0.057, 0.05 , 0.031, 0.039, 0.043, 0.05 ,
       0.039, 0.036, 0.042, 0.052, 0.047, 0.049, 0.037, 0.07 , 0.044,
       0.045, 0.059, 0.042, 0.06 , 0.034, 0.038, 0.043, 0.04 , 0.051,
       0.044, 0.036, 0.044, 0.037, 0.045, 0.039, 0.045, 0.041, 0.044,
       0.035, 0.038, 0.04 , 0.038, 0.033, 0.036, 0.035, 0.036, 0.032,
       0.036, 0.035, 0.039, 0.041, 0.041, 0.045, 0.041, 0.046, 0.041,
       0.035, 0.039, 0.044, 0.044, 0.054, 0.043, 0.065, 0.038],
      dtype=float32)>]/home/alirachidi/anaconda3/envs/LungSoundClass/lib/python3.7/site-packages/sklearn/metrics/_classification.py:1272: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/home/alirachidi/classification_algorithm/trainers/modules/main/global_helpers.py:48: UserWarning: Matplotlib is currently using agg, which is a non-GUI backend, so cannot show the figure.
  plt.show()
/home/alirachidi/classification_algorithm/trainers/modules/callbacks/visualizationCallback.py:32: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  print(np.array(self.model._frontend.weights) - np.array(self.first_weights))

Weight difference
[<tf.Tensor: shape=(80, 2), dtype=float32, numpy=
 array([[0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.]], dtype=float32)>
 <tf.Tensor: shape=(1, 1, 80, 1), dtype=float32, numpy=
 array([[[[0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.]]]], dtype=float32)>
 <tf.Tensor: shape=(80,), dtype=float32, numpy=
 array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], dtype=float32)>
 <tf.Tensor: shape=(80,), dtype=float32, numpy=
 array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], dtype=float32)>
 <tf.Tensor: shape=(80,), dtype=float32, numpy=
 array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], dtype=float32)>
 <tf.Tensor: shape=(80,), dtype=float32, numpy=
 array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], dtype=float32)>   ]
