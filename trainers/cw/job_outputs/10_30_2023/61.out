Tensorflow Version: 2.8.0
Num GPUs Available:  1
Collecting Variables...
All variables have been collected.
../cache/
cw
train61
Description: solo crackles
-----------------------
Job id is 1.
- Loading Perch.
3278 Perch audios have been loaded.
- Loading Icbhi.
725 Icbhi audios have been loaded.
- Loading Antwerp.
131 Antwerp audios have been loaded.
- Preparing Perch.
862 Perch groups of audio chunks (by filename or patients) have been prepared.
- Preparing Icbhi.
112 Icbhi groups of audio chunks (by filename or patients) have been prepared.
- Preparing Antwerp.
15 Antwerp groups of audio chunks (by filename or patients) have been prepared.
--- Samples are being split into training/val groups and de-grouped by patient ---
--- Perch training dataset went from 0 to 2649 elements, with 2346 none's, 61 crakles, 186 wheezes and 56 both ---
--- Perch Validation dataset contains 629 elements, with 551 none, 12 crackles, 54 wheezes and 12 both ---
--- Icbhi training dataset went from 0 to 2040 elements, with 707 none's, 720 crakles, 285 wheezes and 327 both ---
--- Icbhi Validation dataset contains 299 elements, with 172 none, 70 crackles, 18 wheezes and 39 both ---
--- Antwerp training dataset went from 0 to 580 elements, with 82 none's, 16 crakles, 448 wheezes and 34 both ---
--- Antwerp Validation dataset contains 111 elements, with 17 none, 10 crackles, 5 wheezes and 79 both ---
4055
1214
817
222
-----------------------
--- Final training dataset went from 0 to 5269 elements, with 4055 0's, 1214 1's and 0 others ---
--- Final Validation dataset contains 1039 elements, with 817 0's and 222 1's ---
Model: "leaf_mixednet_model"
______________________________________________________________________________________________________________
 Layer (type)                                    Output Shape                                Param #          
==============================================================================================================
 leaf (Leaf)                                     multiple                                    560              
                                                                                                              
 sequential (Sequential)                         (None, 1)                                   105823           
                                                                                                              
==============================================================================================================
Total params: 106,383
Trainable params: 105,887
Non-trainable params: 496
______________________________________________________________________________________________________________
Target metric is avg_accuracy
Epoch 1/25
Validation cm: [[814   3]
 [222   0]]
Validation normalized_cm: [[0.996 0.004]
 [1.    0.   ]]
Validation acc: 0.7834456207892204
Validation class_accuracies: [0.996328029375765, 0.0]
Validation precision: 0.0
Validation recall: 0.0
Validation f1: 0.0
Validation roc_auc: 0.7872352156317886
Validation avg_accuracy: 0.4981640146878825
Validation one_indexed_epoch: 1
-- New best results were achieved. --
Patient Confusion matrix: 
 [[617   2]
 [ 33   0]] 
Patient Normalized Confusion matrix: 
 [[0.997 0.003]
 [1.    0.   ]] 
Patient Validation accuracy: 
 94.63 
Patient Validation class accuracies: 
 [0.9967689822294022, 0.0] 
330/330 - 503s - loss: 0.4448 - accuracy: 0.7802 - 503s/epoch - 2s/step
Epoch 2/25
Validation cm: [[817   0]
 [220   2]]
Validation normalized_cm: [[1.    0.   ]
 [0.991 0.009]]
Validation acc: 0.7882579403272377
Validation class_accuracies: [1.0, 0.009009009009009009]
Validation precision: 1.0
Validation recall: 0.009009009009009009
Validation f1: 0.01785714285714286
Validation roc_auc: 0.4501251557555107
Validation avg_accuracy: 0.5045045045045045
Validation one_indexed_epoch: 2
-- New best results were achieved. --
Patient Confusion matrix: 
 [[619   0]
 [ 32   1]] 
Patient Normalized Confusion matrix: 
 [[1.   0.  ]
 [0.97 0.03]] 
Patient Validation accuracy: 
 95.09 
Patient Validation class accuracies: 
 [1.0, 0.030303030303030304] 
330/330 - 496s - loss: 0.4123 - accuracy: 0.7965 - 496s/epoch - 2s/step
Epoch 3/25
Validation cm: [[806  11]
 [219   3]]
Validation normalized_cm: [[0.987 0.013]
 [0.986 0.014]]
Validation acc: 0.7786333012512031
Validation class_accuracies: [0.9865361077111383, 0.013513513513513514]
Validation precision: 0.21428571428571427
Validation recall: 0.013513513513513514
Validation f1: 0.025423728813559324
Validation roc_auc: 0.40874105439588915
Validation avg_accuracy: 0.500024810612326
Validation one_indexed_epoch: 3
The validation tracker metric at 0.5045045045045045 hasn't increased by 0 in 1 epochs
330/330 - 498s - loss: 0.3961 - accuracy: 0.7996 - 498s/epoch - 2s/step
Epoch 4/25
Validation cm: [[817   0]
 [222   0]]
Validation normalized_cm: [[1. 0.]
 [1. 0.]]
Validation acc: 0.7863330125120308
Validation class_accuracies: [1.0, 0.0]
Validation precision: 0.0
Validation recall: 0.0
Validation f1: 0.0
Validation roc_auc: 0.49544587427084363
Validation avg_accuracy: 0.5
Validation one_indexed_epoch: 4
The validation tracker metric at 0.5045045045045045 hasn't increased by 0 in 2 epochs
330/330 - 496s - loss: 0.3909 - accuracy: 0.8153 - 496s/epoch - 2s/step
Epoch 5/25
Validation cm: [[817   0]
 [222   0]]
Validation normalized_cm: [[1. 0.]
 [1. 0.]]
Validation acc: 0.7863330125120308
Validation class_accuracies: [1.0, 0.0]
Validation precision: 0.0
Validation recall: 0.0
Validation f1: 0.0
Validation roc_auc: 0.538842391963567
Validation avg_accuracy: 0.5
Validation one_indexed_epoch: 5
The validation tracker metric at 0.5045045045045045 hasn't increased by 0 in 3 epochs
330/330 - 497s - loss: 0.3715 - accuracy: 0.8214 - 497s/epoch - 2s/step
Epoch 6/25
Validation cm: [[817   0]
 [220   2]]
Validation normalized_cm: [[1.    0.   ]
 [0.991 0.009]]
Validation acc: 0.7882579403272377
Validation class_accuracies: [1.0, 0.009009009009009009]
Validation precision: 1.0
Validation recall: 0.009009009009009009
Validation f1: 0.01785714285714286
Validation roc_auc: 0.47722937135421833
Validation avg_accuracy: 0.5045045045045045
Validation one_indexed_epoch: 6
The validation tracker metric at 0.5045045045045045 hasn't increased by 0 in 4 epochs
330/330 - 498s - loss: 0.3680 - accuracy: 0.8271 - 498s/epoch - 2s/step
Epoch 7/25
Validation cm: [[813   4]
 [220   2]]
Validation normalized_cm: [[0.995 0.005]
 [0.991 0.009]]
Validation acc: 0.7844080846968239
Validation class_accuracies: [0.9951040391676866, 0.009009009009009009]
Validation precision: 0.3333333333333333
Validation recall: 0.009009009009009009
Validation f1: 0.017543859649122806
Validation roc_auc: 0.2853771764420479
Validation avg_accuracy: 0.5020565240883478
Validation one_indexed_epoch: 7
The validation tracker metric at 0.5045045045045045 hasn't increased by 0 in 5 epochs
330/330 - 496s - loss: 0.3505 - accuracy: 0.8332 - 496s/epoch - 2s/step
Epoch 8/25
Validation cm: [[802  15]
 [221   1]]
Validation normalized_cm: [[0.982 0.018]
 [0.995 0.005]]
Validation acc: 0.7728585178055823
Validation class_accuracies: [0.981640146878825, 0.0045045045045045045]
Validation precision: 0.0625
Validation recall: 0.0045045045045045045
Validation f1: 0.008403361344537815
Validation roc_auc: 0.4256729189409728
Validation avg_accuracy: 0.4930723256916647
Validation one_indexed_epoch: 8
The validation tracker metric at 0.5045045045045045 hasn't increased by 0 in 6 epochs
330/330 - 499s - loss: 0.3389 - accuracy: 0.8432 - 499s/epoch - 2s/step
Epoch 9/25
Validation cm: [[783  34]
 [205  17]]
Validation normalized_cm: [[0.958 0.042]
 [0.923 0.077]]
Validation acc: 0.7699711260827719
Validation class_accuracies: [0.9583843329253366, 0.07657657657657657]
Validation precision: 0.3333333333333333
Validation recall: 0.07657657657657657
Validation f1: 0.12454212454212453
Validation roc_auc: 0.505221255527253
Validation avg_accuracy: 0.5174804547509566
Validation one_indexed_epoch: 9
-- New best results were achieved. --
Patient Confusion matrix: 
 [[614   5]
 [ 32   1]] 
Patient Normalized Confusion matrix: 
 [[0.992 0.008]
 [0.97  0.03 ]] 
Patient Validation accuracy: 
 94.33 
Patient Validation class accuracies: 
 [0.9919224555735057, 0.030303030303030304] 
330/330 - 505s - loss: 0.3170 - accuracy: 0.8544 - 505s/epoch - 2s/step
Epoch 10/25
Validation cm: [[775  42]
 [218   4]]
Validation normalized_cm: [[0.949 0.051]
 [0.982 0.018]]
Validation acc: 0.7497593840230992
Validation class_accuracies: [0.9485924112607099, 0.018018018018018018]
Validation precision: 0.08695652173913043
Validation recall: 0.018018018018018018
Validation f1: 0.029850746268656716
Validation roc_auc: 0.37790973347888895
Validation avg_accuracy: 0.483305214639364
Validation one_indexed_epoch: 10
The validation tracker metric at 0.5174804547509566 hasn't increased by 0 in 1 epochs
330/330 - 533s - loss: 0.3097 - accuracy: 0.8573 - 533s/epoch - 2s/step
Epoch 11/25
Validation cm: [[803  14]
 [222   0]]
Validation normalized_cm: [[0.983 0.017]
 [1.    0.   ]]
Validation acc: 0.7728585178055823
Validation class_accuracies: [0.9828641370869033, 0.0]
Validation precision: 0.0
Validation recall: 0.0
Validation f1: 0.0
Validation roc_auc: 0.352112210129346
Validation avg_accuracy: 0.49143206854345167
Validation one_indexed_epoch: 11
The validation tracker metric at 0.5174804547509566 hasn't increased by 0 in 2 epochs
330/330 - 552s - loss: 0.2941 - accuracy: 0.8671 - 552s/epoch - 2s/step
Epoch 12/25
Validation cm: [[805  12]
 [218   4]]
Validation normalized_cm: [[0.985 0.015]
 [0.982 0.018]]
Validation acc: 0.7786333012512031
Validation class_accuracies: [0.98531211750306, 0.018018018018018018]
Validation precision: 0.25
Validation recall: 0.018018018018018018
Validation f1: 0.03361344537815126
Validation roc_auc: 0.7006957998390068
Validation avg_accuracy: 0.501665067760539
Validation one_indexed_epoch: 12
The validation tracker metric at 0.5174804547509566 hasn't increased by 0 in 3 epochs
330/330 - 552s - loss: 0.2765 - accuracy: 0.8734 - 552s/epoch - 2s/step
Epoch 13/25
Validation cm: [[791  26]
 [214   8]]
Validation normalized_cm: [[0.968 0.032]
 [0.964 0.036]]
Validation acc: 0.7690086621751684
Validation class_accuracies: [0.9681762545899633, 0.036036036036036036]
Validation precision: 0.23529411764705882
Validation recall: 0.036036036036036036
Validation f1: 0.0625
Validation roc_auc: 0.6188924542657712
Validation avg_accuracy: 0.5021061453129997
Validation one_indexed_epoch: 13
The validation tracker metric at 0.5174804547509566 hasn't increased by 0 in 4 epochs
330/330 - 553s - loss: 0.2681 - accuracy: 0.8778 - 553s/epoch - 2s/step
Epoch 14/25
Validation cm: [[793  24]
 [208  14]]
Validation normalized_cm: [[0.971 0.029]
 [0.937 0.063]]
Validation acc: 0.7767083734359962
Validation class_accuracies: [0.9706242350061199, 0.06306306306306306]
Validation precision: 0.3684210526315789
Validation recall: 0.06306306306306306
Validation f1: 0.10769230769230768
Validation roc_auc: 0.7149977394775436
Validation avg_accuracy: 0.5168436490345915
Validation one_indexed_epoch: 14
The validation tracker metric at 0.5174804547509566 hasn't increased by 0 in 5 epochs
330/330 - 553s - loss: 0.2439 - accuracy: 0.8952 - 553s/epoch - 2s/step
Epoch 15/25
Validation cm: [[802  15]
 [219   3]]
Validation normalized_cm: [[0.982 0.018]
 [0.986 0.014]]
Validation acc: 0.7747834456207893
Validation class_accuracies: [0.981640146878825, 0.013513513513513514]
Validation precision: 0.16666666666666666
Validation recall: 0.013513513513513514
Validation f1: 0.025
Validation roc_auc: 0.4502188847354086
Validation avg_accuracy: 0.4975768301961692
Validation one_indexed_epoch: 15
The validation tracker metric at 0.5174804547509566 hasn't increased by 0 in 6 epochs
330/330 - 553s - loss: 0.2178 - accuracy: 0.9053 - 553s/epoch - 2s/step
Epoch 16/25
Validation cm: [[799  18]
 [213   9]]
Validation normalized_cm: [[0.978 0.022]
 [0.959 0.041]]
Validation acc: 0.7776708373435997
Validation class_accuracies: [0.97796817625459, 0.04054054054054054]
Validation precision: 0.3333333333333333
Validation recall: 0.04054054054054054
Validation f1: 0.07228915662650603
Validation roc_auc: 0.57969168679083
Validation avg_accuracy: 0.5092543583975653
Validation one_indexed_epoch: 16
The validation tracker metric at 0.5174804547509566 hasn't increased by 0 in 7 epochs
330/330 - 551s - loss: 0.2115 - accuracy: 0.9121 - 551s/epoch - 2s/step
Epoch 17/25
Validation cm: [[804  13]
 [218   4]]
Validation normalized_cm: [[0.984 0.016]
 [0.982 0.018]]
Validation acc: 0.7776708373435997
Validation class_accuracies: [0.9840881272949816, 0.018018018018018018]
Validation precision: 0.23529411764705882
Validation recall: 0.018018018018018018
Validation f1: 0.03347280334728034
Validation roc_auc: 0.5386659609425827
Validation avg_accuracy: 0.5010530726564998
Validation one_indexed_epoch: 17
The validation tracker metric at 0.5174804547509566 hasn't increased by 0 in 8 epochs
330/330 - 552s - loss: 0.1870 - accuracy: 0.9205 - 552s/epoch - 2s/step
Epoch 18/25
Validation cm: [[814   3]
 [218   4]]
Validation normalized_cm: [[0.996 0.004]
 [0.982 0.018]]
Validation acc: 0.7872954764196343
Validation class_accuracies: [0.996328029375765, 0.018018018018018018]
Validation precision: 0.5714285714285714
Validation recall: 0.018018018018018018
Validation f1: 0.034934497816593885
Validation roc_auc: 0.478536063603383
Validation avg_accuracy: 0.5071730236968915
Validation one_indexed_epoch: 18
The validation tracker metric at 0.5174804547509566 hasn't increased by 0 in 9 epochs
330/330 - 554s - loss: 0.1656 - accuracy: 0.9296 - 554s/epoch - 2s/step
Epoch 19/25
Validation cm: [[747  70]
 [181  41]]
Validation normalized_cm: [[0.914 0.086]
 [0.815 0.185]]
Validation acc: 0.7584215591915303
Validation class_accuracies: [0.9143206854345165, 0.18468468468468469]
Validation precision: 0.36936936936936937
Validation recall: 0.18468468468468469
Validation f1: 0.24624624624624625
Validation roc_auc: 0.6882022781655585
Validation avg_accuracy: 0.5495026850596005
Validation one_indexed_epoch: 19
-- New best results were achieved. --
Patient Confusion matrix: 
 [[590  29]
 [ 24   9]] 
Patient Normalized Confusion matrix: 
 [[0.953 0.047]
 [0.727 0.273]] 
Patient Validation accuracy: 
 91.87 
Patient Validation class accuracies: 
 [0.9531502423263328, 0.2727272727272727] 
330/330 - 550s - loss: 0.1487 - accuracy: 0.9396 - 550s/epoch - 2s/step
Epoch 20/25
Validation cm: [[803  14]
 [211  11]]
Validation normalized_cm: [[0.983 0.017]
 [0.95  0.05 ]]
Validation acc: 0.7834456207892204
Validation class_accuracies: [0.9828641370869033, 0.04954954954954955]
Validation precision: 0.44
Validation recall: 0.04954954954954955
Validation f1: 0.08906882591093117
Validation roc_auc: 0.5564910075313992
Validation avg_accuracy: 0.5162068433182264
Validation one_indexed_epoch: 20
The validation tracker metric at 0.5495026850596005 hasn't increased by 0 in 1 epochs
330/330 - 553s - loss: 0.1292 - accuracy: 0.9482 - 553s/epoch - 2s/step
Epoch 21/25
Validation cm: [[813   4]
 [219   3]]
Validation normalized_cm: [[0.995 0.005]
 [0.986 0.014]]
Validation acc: 0.7853705486044273
Validation class_accuracies: [0.9951040391676866, 0.013513513513513514]
Validation precision: 0.42857142857142855
Validation recall: 0.013513513513513514
Validation f1: 0.026200873362445413
Validation roc_auc: 0.5495936573047957
Validation avg_accuracy: 0.5043087763406001
Validation one_indexed_epoch: 21
The validation tracker metric at 0.5495026850596005 hasn't increased by 0 in 2 epochs
330/330 - 550s - loss: 0.1238 - accuracy: 0.9503 - 550s/epoch - 2s/step
Epoch 22/25
Validation cm: [[716 101]
 [202  20]]
Validation normalized_cm: [[0.876 0.124]
 [0.91  0.09 ]]
Validation acc: 0.7083734359961501
Validation class_accuracies: [0.8763769889840881, 0.09009009009009009]
Validation precision: 0.1652892561983471
Validation recall: 0.09009009009009009
Validation f1: 0.11661807580174928
Validation roc_auc: 0.5199091380241931
Validation avg_accuracy: 0.4832335395370891
Validation one_indexed_epoch: 22
The validation tracker metric at 0.5495026850596005 hasn't increased by 0 in 3 epochs
330/330 - 548s - loss: 0.1092 - accuracy: 0.9592 - 548s/epoch - 2s/step
Epoch 23/25
Validation cm: [[734  83]
 [180  42]]
Validation normalized_cm: [[0.898 0.102]
 [0.811 0.189]]
Validation acc: 0.7468719923002888
Validation class_accuracies: [0.8984088127294981, 0.1891891891891892]
Validation precision: 0.336
Validation recall: 0.1891891891891892
Validation f1: 0.24207492795389052
Validation roc_auc: 0.5602677340743436
Validation avg_accuracy: 0.5437990009593436
Validation one_indexed_epoch: 23
The validation tracker metric at 0.5495026850596005 hasn't increased by 0 in 4 epochs
330/330 - 551s - loss: 0.1035 - accuracy: 0.9592 - 551s/epoch - 2s/step
Epoch 24/25
Validation cm: [[784  33]
 [204  18]]
Validation normalized_cm: [[0.96  0.04 ]
 [0.919 0.081]]
Validation acc: 0.7718960538979788
Validation class_accuracies: [0.9596083231334149, 0.08108108108108109]
Validation precision: 0.35294117647058826
Validation recall: 0.08108108108108109
Validation f1: 0.13186813186813187
Validation roc_auc: 0.6400366094368544
Validation avg_accuracy: 0.520344702107248
Validation one_indexed_epoch: 24
The validation tracker metric at 0.5495026850596005 hasn't increased by 0 in 5 epochs
330/330 - 510s - loss: 0.0717 - accuracy: 0.9738 - 510s/epoch - 2s/step
Epoch 25/25
Validation cm: [[735  82]
 [183  39]]
Validation normalized_cm: [[0.9   0.1  ]
 [0.824 0.176]]
Validation acc: 0.7449470644850819
Validation class_accuracies: [0.8996328029375765, 0.17567567567567569]
Validation precision: 0.32231404958677684
Validation recall: 0.17567567567567569
Validation f1: 0.22740524781341107
Validation roc_auc: 0.550701864655353
Validation avg_accuracy: 0.5376542393066261
Validation one_indexed_epoch: 25
The validation tracker metric at 0.5495026850596005 hasn't increased by 0 in 6 epochs
330/330 - 498s - loss: 0.0678 - accuracy: 0.9765 - 498s/epoch - 2s/step
----------------------------------
The best metrics for this job are: 

Best avg_accuracy: 0.5495026850596005
Best cm: [[747  70]
 [181  41]]
Best normalized_cm: [[0.914 0.086]
 [0.815 0.185]]
Best acc: 0.7584215591915303
Best class_accuracies: [0.9143206854345165, 0.18468468468468469]
Best precision: 0.36936936936936937
Best recall: 0.18468468468468469
Best f1: 0.24624624624624625
Best roc_auc: 0.6882022781655585
Best one_indexed_epoch: 19
Best patient_cm: [[590  29]
 [ 24   9]]
avg_accuracy
model
cm
normalized_cm
acc
class_accuracies
precision
recall
f1
roc_auc
one_indexed_epoch
patient_cm
Initial weights
[<tf.Variable 'kernel:0' shape=(80, 2) dtype=float32, numpy=
array([[2.405e-02, 1.501e+02],
       [4.253e-02, 9.618e+01],
       [3.181e-02, 1.501e+02],
       [9.602e-02, 1.503e+02],
       [4.942e-02, 1.500e+02],
       [0.000e+00, 9.636e+01],
       [5.649e-02, 9.567e+01],
       [5.076e-02, 9.578e+01],
       [7.786e-02, 9.583e+01],
       [8.736e-02, 9.565e+01],
       [1.089e-01, 9.551e+01],
       [1.531e-01, 9.561e+01],
       [1.399e-01, 9.557e+01],
       [1.802e-01, 9.527e+01],
       [1.915e-01, 9.534e+01],
       [2.096e-01, 9.563e+01],
       [1.601e-01, 1.503e+02],
       [2.242e-01, 9.609e+01],
       [2.663e-01, 9.598e+01],
       [2.817e-01, 9.602e+01],
       [3.154e-01, 9.603e+01],
       [3.183e-01, 9.607e+01],
       [3.368e-01, 9.624e+01],
       [3.424e-01, 9.629e+01],
       [3.792e-01, 6.397e+01],
       [3.617e-01, 9.615e+01],
       [4.145e-01, 6.423e+01],
       [3.759e-01, 9.609e+01],
       [4.232e-01, 6.391e+01],
       [4.444e-01, 6.401e+01],
       [4.469e-01, 6.386e+01],
       [5.722e-01, 6.385e+01],
       [4.605e-01, 6.386e+01],
       [5.763e-01, 6.369e+01],
       [5.752e-01, 6.365e+01],
       [5.710e-01, 6.362e+01],
       [6.521e-01, 6.373e+01],
       [7.234e-01, 6.387e+01],
       [7.193e-01, 4.804e+01],
       [7.223e-01, 4.808e+01],
       [8.541e-01, 4.815e+01],
       [8.402e-01, 4.806e+01],
       [8.390e-01, 4.809e+01],
       [8.546e-01, 4.801e+01],
       [9.470e-01, 4.806e+01],
       [8.934e-01, 4.800e+01],
       [7.688e-01, 4.785e+01],
       [9.710e-01, 3.834e+01],
       [1.002e+00, 3.823e+01],
       [1.025e+00, 3.831e+01],
       [1.148e+00, 3.833e+01],
       [1.155e+00, 3.844e+01],
       [1.190e+00, 3.208e+01],
       [1.182e+00, 3.214e+01],
       [1.315e+00, 3.850e+01],
       [1.324e+00, 3.203e+01],
       [1.557e+00, 3.213e+01],
       [1.499e+00, 3.198e+01],
       [1.479e+00, 2.735e+01],
       [1.477e+00, 2.735e+01],
       [1.526e+00, 3.192e+01],
       [1.647e+00, 2.738e+01],
       [1.520e+00, 2.739e+01],
       [1.857e+00, 2.410e+01],
       [1.906e+00, 2.412e+01],
       [1.923e+00, 2.402e+01],
       [1.904e+00, 2.438e+01],
       [2.090e+00, 2.401e+01],
       [1.922e+00, 2.152e+01],
       [2.154e+00, 2.134e+01],
       [2.268e+00, 1.916e+01],
       [2.276e+00, 1.918e+01],
       [2.446e+00, 2.129e+01],
       [2.440e+00, 1.922e+01],
       [2.620e+00, 1.923e+01],
       [2.622e+00, 1.750e+01],
       [2.854e+00, 1.756e+01],
       [2.846e+00, 1.611e+01],
       [3.023e+00, 1.754e+01],
       [3.088e+00, 1.601e+01]], dtype=float32)>, <tf.Variable 'leaf/learnable_pooling/kernel:0' shape=(1, 1, 80, 1) dtype=float32, numpy=
array([[[[0.346],
         [0.468],
         [0.503],
         [0.502],
         [0.504],
         [0.503],
         [0.508],
         [0.5  ],
         [0.502],
         [0.374],
         [0.31 ],
         [0.241],
         [0.287],
         [0.401],
         [0.503],
         [0.503],
         [0.505],
         [0.503],
         [0.503],
         [0.501],
         [0.505],
         [0.507],
         [0.501],
         [0.503],
         [0.32 ],
         [0.502],
         [0.058],
         [0.501],
         [0.355],
         [0.481],
         [0.504],
         [0.506],
         [0.503],
         [0.501],
         [0.503],
         [0.501],
         [0.503],
         [0.502],
         [0.437],
         [0.32 ],
         [0.379],
         [0.434],
         [0.472],
         [0.501],
         [0.387],
         [0.397],
         [0.507],
         [0.502],
         [0.473],
         [0.356],
         [0.433],
         [0.37 ],
         [0.318],
         [0.313],
         [0.439],
         [0.455],
         [0.261],
         [0.502],
         [0.502],
         [0.501],
         [0.501],
         [0.441],
         [0.377],
         [0.319],
         [0.334],
         [0.43 ],
         [0.064],
         [0.4  ],
         [0.323],
         [0.453],
         [0.466],
         [0.457],
         [0.476],
         [0.421],
         [0.374],
         [0.335],
         [0.293],
         [0.309],
         [0.349],
         [0.415]]]], dtype=float32)>, <tf.Variable 'leaf/PCEN/alpha:0' shape=(80,) dtype=float32, numpy=
array([1.002, 1.001, 1.02 , 0.839, 0.877, 1.003, 0.801, 0.887, 0.957,
       1.002, 1.002, 1.002, 0.957, 1.   , 1.003, 1.004, 1.003, 0.958,
       0.958, 0.99 , 0.98 , 0.986, 0.964, 0.959, 0.931, 1.002, 1.002,
       0.909, 0.979, 0.984, 0.947, 0.888, 0.91 , 0.92 , 0.935, 0.935,
       0.939, 0.954, 1.003, 0.971, 1.003, 0.936, 0.934, 0.949, 0.954,
       0.954, 0.929, 0.925, 0.911, 0.919, 0.959, 1.001, 1.003, 0.974,
       0.97 , 0.967, 0.846, 0.979, 0.98 , 0.956, 0.926, 0.896, 0.917,
       0.93 , 0.936, 0.968, 1.008, 1.002, 0.852, 0.968, 0.957, 0.928,
       0.94 , 0.951, 1.001, 1.002, 1.002, 1.004, 0.944, 0.863],
      dtype=float32)>, <tf.Variable 'leaf/PCEN/delta:0' shape=(80,) dtype=float32, numpy=
array([2.1  , 1.906, 1.807, 2.036, 1.844, 1.845, 1.998, 2.098, 1.995,
       1.919, 1.87 , 1.992, 1.968, 1.919, 1.853, 1.89 , 2.06 , 1.979,
       1.99 , 1.952, 1.96 , 1.949, 1.975, 1.985, 2.01 , 1.956, 1.909,
       2.056, 2.019, 2.007, 2.025, 2.061, 2.001, 2.019, 2.002, 2.003,
       2.009, 2.023, 1.977, 1.995, 2.012, 2.033, 2.033, 2.014, 1.999,
       2.001, 2.031, 2.035, 2.048, 2.041, 2.   , 1.967, 1.941, 1.977,
       1.988, 1.99 , 2.036, 1.979, 1.977, 2.003, 2.032, 2.063, 2.042,
       2.028, 2.021, 1.988, 2.101, 1.922, 2.023, 1.989, 2.001, 2.031,
       2.019, 2.008, 1.966, 1.924, 1.91 , 1.925, 2.014, 2.088],
      dtype=float32)>, <tf.Variable 'leaf/PCEN/root:0' shape=(80,) dtype=float32, numpy=
array([2.117, 1.943, 1.908, 2.072, 1.809, 1.875, 1.994, 2.087, 1.968,
       1.931, 1.891, 1.967, 2.042, 1.953, 1.915, 1.972, 2.143, 2.035,
       1.992, 1.936, 1.936, 1.93 , 1.947, 1.979, 2.001, 1.996, 1.921,
       2.107, 2.033, 2.003, 2.017, 2.041, 1.972, 2.022, 2.003, 2.002,
       2.014, 2.007, 1.974, 2.009, 2.037, 2.055, 2.05 , 2.023, 2.006,
       2.013, 2.033, 2.043, 2.058, 2.051, 2.006, 1.969, 1.948, 2.006,
       1.992, 1.995, 2.174, 1.985, 1.983, 2.005, 2.034, 2.063, 2.046,
       2.034, 2.03 , 1.999, 2.384, 1.933, 2.156, 1.994, 2.005, 2.034,
       2.022, 2.011, 1.971, 1.925, 1.913, 1.928, 2.015, 2.1  ],
      dtype=float32)>, <tf.Variable 'leaf/PCEN/EMA/smooth:0' shape=(80,) dtype=float32, numpy=
array([ 0.14 ,  0.039,  0.029,  0.033,  0.04 ,  0.04 ,  0.055,  0.08 ,
        0.058,  0.04 ,  0.063,  0.034,  0.056,  0.088,  0.036,  0.028,
        0.081,  0.041,  0.041,  0.055,  0.064,  0.075,  0.05 ,  0.045,
        0.085,  0.027,  0.055,  0.06 ,  0.121,  0.046,  0.099,  0.057,
        0.076,  0.09 ,  0.102,  0.098,  0.052,  0.053,  0.042,  0.065,
        0.099,  0.083,  0.076,  0.064,  0.064,  0.051,  0.045,  0.039,
        0.046,  0.144,  0.145,  0.12 ,  0.06 ,  0.036,  0.043,  0.049,
       -0.022,  0.083,  0.102,  0.108,  0.068,  0.069,  0.113,  0.109,
        0.093,  0.062, -0.007,  0.062, -0.012,  0.07 ,  0.077,  0.08 ,
        0.097,  0.115,  0.119,  0.086,  0.036,  0.021,  0.015, -0.007],
      dtype=float32)>]
Post training weights
[<tf.Variable 'kernel:0' shape=(80, 2) dtype=float32, numpy=
array([[2.405e-02, 1.501e+02],
       [4.253e-02, 9.618e+01],
       [3.181e-02, 1.501e+02],
       [9.602e-02, 1.503e+02],
       [4.942e-02, 1.500e+02],
       [0.000e+00, 9.636e+01],
       [5.649e-02, 9.567e+01],
       [5.076e-02, 9.578e+01],
       [7.786e-02, 9.583e+01],
       [8.736e-02, 9.565e+01],
       [1.089e-01, 9.551e+01],
       [1.531e-01, 9.561e+01],
       [1.399e-01, 9.557e+01],
       [1.802e-01, 9.527e+01],
       [1.915e-01, 9.534e+01],
       [2.096e-01, 9.563e+01],
       [1.601e-01, 1.503e+02],
       [2.242e-01, 9.609e+01],
       [2.663e-01, 9.598e+01],
       [2.817e-01, 9.602e+01],
       [3.154e-01, 9.603e+01],
       [3.183e-01, 9.607e+01],
       [3.368e-01, 9.624e+01],
       [3.424e-01, 9.629e+01],
       [3.792e-01, 6.397e+01],
       [3.617e-01, 9.615e+01],
       [4.145e-01, 6.423e+01],
       [3.759e-01, 9.609e+01],
       [4.232e-01, 6.391e+01],
       [4.444e-01, 6.401e+01],
       [4.469e-01, 6.386e+01],
       [5.722e-01, 6.385e+01],
       [4.605e-01, 6.386e+01],
       [5.763e-01, 6.369e+01],
       [5.752e-01, 6.365e+01],
       [5.710e-01, 6.362e+01],
       [6.521e-01, 6.373e+01],
       [7.234e-01, 6.387e+01],
       [7.193e-01, 4.804e+01],
       [7.223e-01, 4.808e+01],
       [8.541e-01, 4.815e+01],
       [8.402e-01, 4.806e+01],
       [8.390e-01, 4.809e+01],
       [8.546e-01, 4.801e+01],
       [9.470e-01, 4.806e+01],
       [8.934e-01, 4.800e+01],
       [7.688e-01, 4.785e+01],
       [9.710e-01, 3.834e+01],
       [1.002e+00, 3.823e+01],
       [1.025e+00, 3.831e+01],
       [1.148e+00, 3.833e+01],
       [1.155e+00, 3.844e+01],
       [1.190e+00, 3.208e+01],
       [1.182e+00, 3.214e+01],
       [1.315e+00, 3.850e+01],
       [1.324e+00, 3.203e+01],
       [1.557e+00, 3.213e+01],
       [1.499e+00, 3.198e+01],
       [1.479e+00, 2.735e+01],
       [1.477e+00, 2.735e+01],
       [1.526e+00, 3.192e+01],
       [1.647e+00, 2.738e+01],
       [1.520e+00, 2.739e+01],
       [1.857e+00, 2.410e+01],
       [1.906e+00, 2.412e+01],
       [1.923e+00, 2.402e+01],
       [1.904e+00, 2.438e+01],
       [2.090e+00, 2.401e+01],
       [1.922e+00, 2.152e+01],
       [2.154e+00, 2.134e+01],
       [2.268e+00, 1.916e+01],
       [2.276e+00, 1.918e+01],
       [2.446e+00, 2.129e+01],
       [2.440e+00, 1.922e+01],
       [2.620e+00, 1.923e+01],
       [2.622e+00, 1.750e+01],
       [2.854e+00, 1.756e+01],
       [2.846e+00, 1.611e+01],
       [3.023e+00, 1.754e+01],
       [3.088e+00, 1.601e+01]], dtype=float32)>, <tf.Variable 'leaf/learnable_pooling/kernel:0' shape=(1, 1, 80, 1) dtype=float32, numpy=
array([[[[0.346],
         [0.468],
         [0.503],
         [0.502],
         [0.504],
         [0.503],
         [0.508],
         [0.5  ],
         [0.502],
         [0.374],
         [0.31 ],
         [0.241],
         [0.287],
         [0.401],
         [0.503],
         [0.503],
         [0.505],
         [0.503],
         [0.503],
         [0.501],
         [0.505],
         [0.507],
         [0.501],
         [0.503],
         [0.32 ],
         [0.502],
         [0.058],
         [0.501],
         [0.355],
         [0.481],
         [0.504],
         [0.506],
         [0.503],
         [0.501],
         [0.503],
         [0.501],
         [0.503],
         [0.502],
         [0.437],
         [0.32 ],
         [0.379],
         [0.434],
         [0.472],
         [0.501],
         [0.387],
         [0.397],
         [0.507],
         [0.502],
         [0.473],
         [0.356],
         [0.433],
         [0.37 ],
         [0.318],
         [0.313],
         [0.439],
         [0.455],
         [0.261],
         [0.502],
         [0.502],
         [0.501],
         [0.501],
         [0.441],
         [0.377],
         [0.319],
         [0.334],
         [0.43 ],
         [0.064],
         [0.4  ],
         [0.323],
         [0.453],
         [0.466],
         [0.457],
         [0.476],
         [0.421],
         [0.374],
         [0.335],
         [0.293],
         [0.309],
         [0.349],
         [0.415]]]], dtype=float32)>, <tf.Variable 'leaf/PCEN/alpha:0' shape=(80,) dtype=float32, numpy=
array([1.002, 1.001, 1.02 , 0.839, 0.877, 1.003, 0.801, 0.887, 0.957,
       1.002, 1.002, 1.002, 0.957, 1.   , 1.003, 1.004, 1.003, 0.958,
       0.958, 0.99 , 0.98 , 0.986, 0.964, 0.959, 0.931, 1.002, 1.002,
       0.909, 0.979, 0.984, 0.947, 0.888, 0.91 , 0.92 , 0.935, 0.935,
       0.939, 0.954, 1.003, 0.971, 1.003, 0.936, 0.934, 0.949, 0.954,
       0.954, 0.929, 0.925, 0.911, 0.919, 0.959, 1.001, 1.003, 0.974,
       0.97 , 0.967, 0.846, 0.979, 0.98 , 0.956, 0.926, 0.896, 0.917,
       0.93 , 0.936, 0.968, 1.008, 1.002, 0.852, 0.968, 0.957, 0.928,
       0.94 , 0.951, 1.001, 1.002, 1.002, 1.004, 0.944, 0.863],
      dtype=float32)>, <tf.Variable 'leaf/PCEN/delta:0' shape=(80,) dtype=float32, numpy=
array([2.1  , 1.906, 1.807, 2.036, 1.844, 1.845, 1.998, 2.098, 1.995,
       1.919, 1.87 , 1.992, 1.968, 1.919, 1.853, 1.89 , 2.06 , 1.979,
       1.99 , 1.952, 1.96 , 1.949, 1.975, 1.985, 2.01 , 1.956, 1.909,
       2.056, 2.019, 2.007, 2.025, 2.061, 2.001, 2.019, 2.002, 2.003,
       2.009, 2.023, 1.977, 1.995, 2.012, 2.033, 2.033, 2.014, 1.999,
       2.001, 2.031, 2.035, 2.048, 2.041, 2.   , 1.967, 1.941, 1.977,
       1.988, 1.99 , 2.036, 1.979, 1.977, 2.003, 2.032, 2.063, 2.042,
       2.028, 2.021, 1.988, 2.101, 1.922, 2.023, 1.989, 2.001, 2.031,
       2.019, 2.008, 1.966, 1.924, 1.91 , 1.925, 2.014, 2.088],
      dtype=float32)>, <tf.Variable 'leaf/PCEN/root:0' shape=(80,) dtype=float32, numpy=
array([2.117, 1.943, 1.908, 2.072, 1.809, 1.875, 1.994, 2.087, 1.968,
       1.931, 1.891, 1.967, 2.042, 1.953, 1.915, 1.972, 2.143, 2.035,
       1.992, 1.936, 1.936, 1.93 , 1.947, 1.979, 2.001, 1.996, 1.921,
       2.107, 2.033, 2.003, 2.017, 2.041, 1.972, 2.022, 2.003, 2.002,
       2.014, 2.007, 1.974, 2.009, 2.037, 2.055, 2.05 , 2.023, 2.006,
       2.013, 2.033, 2.043, 2.058, 2.051, 2.006, 1.969, 1.948, 2.006,
       1.992, 1.995, 2.174, 1.985, 1.983, 2.005, 2.034, 2.063, 2.046,
       2.034, 2.03 , 1.999, 2.384, 1.933, 2.156, 1.994, 2.005, 2.034,
       2.022, 2.011, 1.971, 1.925, 1.913, 1.928, 2.015, 2.1  ],
      dtype=float32)>, <tf.Variable 'leaf/PCEN/EMA/smooth:0' shape=(80,) dtype=float32, numpy=
array([ 0.14 ,  0.039,  0.029,  0.033,  0.04 ,  0.04 ,  0.055,  0.08 ,
        0.058,  0.04 ,  0.063,  0.034,  0.056,  0.088,  0.036,  0.028,
        0.081,  0.041,  0.041,  0.055,  0.064,  0.075,  0.05 ,  0.045,
        0.085,  0.027,  0.055,  0.06 ,  0.121,  0.046,  0.099,  0.057,
        0.076,  0.09 ,  0.102,  0.098,  0.052,  0.053,  0.042,  0.065,
        0.099,  0.083,  0.076,  0.064,  0.064,  0.051,  0.045,  0.039,
        0.046,  0.144,  0.145,  0.12 ,  0.06 ,  0.036,  0.043,  0.049,
       -0.022,  0.083,  0.102,  0.108,  0.068,  0.069,  0.113,  0.109,
        0.093,  0.062, -0.007,  0.062, -0.012,  0.07 ,  0.077,  0.08 ,
        0.097,  0.115,  0.119,  0.086,  0.036,  0.021,  0.015, -0.007],
      dtype=float32)>]/home/alirachidi/classification_algorithm/trainers/modules/main/global_helpers.py:48: UserWarning: Matplotlib is currently using agg, which is a non-GUI backend, so cannot show the figure.
  plt.show()
/home/alirachidi/anaconda3/envs/LungSoundClass/lib/python3.7/site-packages/sklearn/metrics/_classification.py:1272: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/home/alirachidi/classification_algorithm/trainers/modules/callbacks/visualizationCallback.py:32: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  print(np.array(self.model._frontend.weights) - np.array(self.first_weights))

Weight difference
[<tf.Tensor: shape=(80, 2), dtype=float32, numpy=
 array([[0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.]], dtype=float32)>
 <tf.Tensor: shape=(1, 1, 80, 1), dtype=float32, numpy=
 array([[[[0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.]]]], dtype=float32)>
 <tf.Tensor: shape=(80,), dtype=float32, numpy=
 array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], dtype=float32)>
 <tf.Tensor: shape=(80,), dtype=float32, numpy=
 array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], dtype=float32)>
 <tf.Tensor: shape=(80,), dtype=float32, numpy=
 array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], dtype=float32)>
 <tf.Tensor: shape=(80,), dtype=float32, numpy=
 array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], dtype=float32)>   ]
