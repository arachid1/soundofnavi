Tensorflow Version: 2.8.0
Num GPUs Available:  1
Collecting Variables...
All variables have been collected.
../cache/
cw
train67
Description: crackles with diff params + mixing data + preemp
-----------------------
Job id is 1.
- Loading Perch.
3278 Perch audios have been loaded.
- Loading Icbhi.
725 Icbhi audios have been loaded.
- Loading Antwerp.
131 Antwerp audios have been loaded.
- Preparing Perch.
862 Perch groups of audio chunks (by filename or patients) have been prepared.
- Preparing Icbhi.
112 Icbhi groups of audio chunks (by filename or patients) have been prepared.
- Preparing Antwerp.
15 Antwerp groups of audio chunks (by filename or patients) have been prepared.
--- Samples are being split into training/val groups and de-grouped by patient ---
--- Perch training dataset went from 0 to 2649 elements, with 2346 none's, 61 crakles, 186 wheezes and 56 both ---
--- Perch Validation dataset contains 629 elements, with 551 none, 12 crackles, 54 wheezes and 12 both ---
--- Icbhi training dataset went from 0 to 2040 elements, with 707 none's, 720 crakles, 285 wheezes and 327 both ---
--- Icbhi Validation dataset contains 299 elements, with 172 none, 70 crackles, 18 wheezes and 39 both ---
--- Antwerp training dataset went from 0 to 580 elements, with 82 none's, 16 crakles, 448 wheezes and 34 both ---
--- Antwerp Validation dataset contains 111 elements, with 17 none, 10 crackles, 5 wheezes and 79 both ---
3908
1138
964
298
-----------------------
--- Final training dataset went from 0 to 5046 elements, with 3908 0's, 1138 1's and 0 others ---
--- Final Validation dataset contains 1262 elements, with 964 0's and 298 1's ---
Model: "leaf_model9_model"
______________________________________________________________________________________________________________
 Layer (type)                                    Output Shape                                Param #          
==============================================================================================================
 leaf (Leaf)                                     multiple                                    562              
                                                                                                              
 sequential (Sequential)                         (None, 80, 500, 1)                          4                
                                                                                                              
 sequential_1 (Sequential)                       (None, 80, 500, 16)                         2352             
                                                                                                              
 sequential_2 (Sequential)                       (None, 80, 500, 16)                         6448             
                                                                                                              
 sequential_3 (Sequential)                       (None, 80, 500, 16)                         32               
                                                                                                              
 concatenate (Concatenate)                       multiple                                    0                
                                                                                                              
 sequential_4 (Sequential)                       (None, 1)                                   6191809          
                                                                                                              
==============================================================================================================
Total params: 6,201,207
Trainable params: 6,159,701
Non-trainable params: 41,506
______________________________________________________________________________________________________________
Target metric is avg_accuracy
Epoch 1/25
Validation cm: [[964   0]
 [298   0]]
Validation normalized_cm: [[1. 0.]
 [1. 0.]]
Validation acc: 0.7638668779714739
Validation class_accuracies: [1.0, 0.0]
Validation precision: 0.0
Validation recall: 0.0
Validation f1: 0.0
Validation roc_auc: 0.67286056420396
Validation avg_accuracy: 0.5
Validation one_indexed_epoch: 1
-- New best results were achieved. --
Patient Confusion matrix: 
 [[693   0]
 [ 47   0]] 
Patient Normalized Confusion matrix: 
 [[1. 0.]
 [1. 0.]] 
Patient Validation accuracy: 
 93.65 
Patient Validation class accuracies: 
 [1.0, 0.0] 
316/316 - 720s - loss: 0.5339 - accuracy: 0.7616 - 720s/epoch - 2s/step
Epoch 2/25
Validation cm: [[936  28]
 [295   3]]
Validation normalized_cm: [[0.971 0.029]
 [0.99  0.01 ]]
Validation acc: 0.7440570522979397
Validation class_accuracies: [0.970954356846473, 0.010067114093959731]
Validation precision: 0.0967741935483871
Validation recall: 0.010067114093959731
Validation f1: 0.0182370820668693
Validation roc_auc: 0.6800662786488068
Validation avg_accuracy: 0.4905107354702164
Validation one_indexed_epoch: 2
The validation tracker metric at 0.5 hasn't increased by 0 in 1 epochs
316/316 - 705s - loss: 0.4424 - accuracy: 0.7860 - 705s/epoch - 2s/step
Epoch 3/25
Validation cm: [[906  58]
 [268  30]]
Validation normalized_cm: [[0.94  0.06 ]
 [0.899 0.101]]
Validation acc: 0.7416798732171157
Validation class_accuracies: [0.9398340248962656, 0.10067114093959731]
Validation precision: 0.3409090909090909
Validation recall: 0.10067114093959731
Validation f1: 0.155440414507772
Validation roc_auc: 0.5276114623074996
Validation avg_accuracy: 0.5202525829179314
Validation one_indexed_epoch: 3
-- New best results were achieved. --
Patient Confusion matrix: 
 [[640  53]
 [ 35  12]] 
Patient Normalized Confusion matrix: 
 [[0.924 0.076]
 [0.745 0.255]] 
Patient Validation accuracy: 
 88.11 
Patient Validation class accuracies: 
 [0.9235209235209235, 0.2553191489361702] 
316/316 - 705s - loss: 0.4379 - accuracy: 0.7830 - 705s/epoch - 2s/step
Epoch 4/25
Validation cm: [[852 112]
 [175 123]]
Validation normalized_cm: [[0.884 0.116]
 [0.587 0.413]]
Validation acc: 0.7725832012678289
Validation class_accuracies: [0.8838174273858921, 0.412751677852349]
Validation precision: 0.5234042553191489
Validation recall: 0.412751677852349
Validation f1: 0.46153846153846156
Validation roc_auc: 0.7817434347935058
Validation avg_accuracy: 0.6482845526191205
Validation one_indexed_epoch: 4
-- New best results were achieved. --
Patient Confusion matrix: 
 [[659  34]
 [ 30  17]] 
Patient Normalized Confusion matrix: 
 [[0.951 0.049]
 [0.638 0.362]] 
Patient Validation accuracy: 
 91.35 
Patient Validation class accuracies: 
 [0.950937950937951, 0.3617021276595745] 
316/316 - 706s - loss: 0.4157 - accuracy: 0.8028 - 706s/epoch - 2s/step
Epoch 5/25
Validation cm: [[832 132]
 [155 143]]
Validation normalized_cm: [[0.863 0.137]
 [0.52  0.48 ]]
Validation acc: 0.7725832012678289
Validation class_accuracies: [0.8630705394190872, 0.4798657718120805]
Validation precision: 0.52
Validation recall: 0.4798657718120805
Validation f1: 0.49912739965095987
Validation roc_auc: 0.7675408671920689
Validation avg_accuracy: 0.6714681556155838
Validation one_indexed_epoch: 5
-- New best results were achieved. --
Patient Confusion matrix: 
 [[631  62]
 [ 30  17]] 
Patient Normalized Confusion matrix: 
 [[0.911 0.089]
 [0.638 0.362]] 
Patient Validation accuracy: 
 87.57 
Patient Validation class accuracies: 
 [0.9105339105339105, 0.3617021276595745] 
316/316 - 707s - loss: 0.4129 - accuracy: 0.8004 - 707s/epoch - 2s/step
Epoch 6/25
Validation cm: [[715 249]
 [ 66 232]]
Validation normalized_cm: [[0.742 0.258]
 [0.221 0.779]]
Validation acc: 0.7503961965134707
Validation class_accuracies: [0.741701244813278, 0.7785234899328859]
Validation precision: 0.48232848232848236
Validation recall: 0.7785234899328859
Validation f1: 0.5956354300385109
Validation roc_auc: 0.8104374947784677
Validation avg_accuracy: 0.760112367373082
Validation one_indexed_epoch: 6
-- New best results were achieved. --
Patient Confusion matrix: 
 [[626  67]
 [ 19  28]] 
Patient Normalized Confusion matrix: 
 [[0.903 0.097]
 [0.404 0.596]] 
Patient Validation accuracy: 
 88.38 
Patient Validation class accuracies: 
 [0.9033189033189033, 0.5957446808510638] 
316/316 - 708s - loss: 0.3958 - accuracy: 0.8068 - 708s/epoch - 2s/step
Epoch 7/25
Validation cm: [[747 217]
 [ 92 206]]
Validation normalized_cm: [[0.775 0.225]
 [0.309 0.691]]
Validation acc: 0.7551505546751188
Validation class_accuracies: [0.774896265560166, 0.6912751677852349]
Validation precision: 0.48699763593380613
Validation recall: 0.6912751677852349
Validation f1: 0.5714285714285714
Validation roc_auc: 0.7930010582305271
Validation avg_accuracy: 0.7330857166727005
Validation one_indexed_epoch: 7
The validation tracker metric at 0.760112367373082 hasn't increased by 0 in 1 epochs
316/316 - 705s - loss: 0.3878 - accuracy: 0.8135 - 705s/epoch - 2s/step
Epoch 8/25
Validation cm: [[953  11]
 [282  16]]
Validation normalized_cm: [[0.989 0.011]
 [0.946 0.054]]
Validation acc: 0.7678288431061807
Validation class_accuracies: [0.9885892116182573, 0.053691275167785234]
Validation precision: 0.5925925925925926
Validation recall: 0.053691275167785234
Validation f1: 0.09846153846153846
Validation roc_auc: 0.783898187084018
Validation avg_accuracy: 0.5211402433930212
Validation one_indexed_epoch: 8
The validation tracker metric at 0.760112367373082 hasn't increased by 0 in 2 epochs
316/316 - 706s - loss: 0.3798 - accuracy: 0.8191 - 706s/epoch - 2s/step
Epoch 9/25
Validation cm: [[332 632]
 [  7 291]]
Validation normalized_cm: [[0.344 0.656]
 [0.023 0.977]]
Validation acc: 0.4936608557844691
Validation class_accuracies: [0.34439834024896265, 0.9765100671140939]
Validation precision: 0.3152762730227519
Validation recall: 0.9765100671140939
Validation f1: 0.47665847665847666
Validation roc_auc: 0.7429213428388426
Validation avg_accuracy: 0.6604542036815283
Validation one_indexed_epoch: 9
The validation tracker metric at 0.760112367373082 hasn't increased by 0 in 3 epochs
316/316 - 707s - loss: 0.3693 - accuracy: 0.8240 - 707s/epoch - 2s/step
Epoch 10/25
Validation cm: [[618 346]
 [ 34 264]]
Validation normalized_cm: [[0.641 0.359]
 [0.114 0.886]]
Validation acc: 0.6988906497622821
Validation class_accuracies: [0.6410788381742739, 0.8859060402684564]
Validation precision: 0.43278688524590164
Validation recall: 0.8859060402684564
Validation f1: 0.5814977973568283
Validation roc_auc: 0.8398695313152692
Validation avg_accuracy: 0.7634924392213651
Validation one_indexed_epoch: 10
-- New best results were achieved. --
Patient Confusion matrix: 
 [[538 155]
 [ 14  33]] 
Patient Normalized Confusion matrix: 
 [[0.776 0.224]
 [0.298 0.702]] 
Patient Validation accuracy: 
 77.16 
Patient Validation class accuracies: 
 [0.7763347763347763, 0.7021276595744681] 
316/316 - 706s - loss: 0.3486 - accuracy: 0.8389 - 706s/epoch - 2s/step
Epoch 11/25
Validation cm: [[929  35]
 [242  56]]
Validation normalized_cm: [[0.964 0.036]
 [0.812 0.188]]
Validation acc: 0.7805071315372425
Validation class_accuracies: [0.9636929460580913, 0.18791946308724833]
Validation precision: 0.6153846153846154
Validation recall: 0.18791946308724833
Validation f1: 0.28791773778920315
Validation roc_auc: 0.810312178005514
Validation avg_accuracy: 0.5758062045726698
Validation one_indexed_epoch: 11
The validation tracker metric at 0.7634924392213651 hasn't increased by 0 in 1 epochs
316/316 - 710s - loss: 0.3428 - accuracy: 0.8393 - 710s/epoch - 2s/step
Epoch 12/25
Validation cm: [[696 268]
 [ 79 219]]
Validation normalized_cm: [[0.722 0.278]
 [0.265 0.735]]
Validation acc: 0.7250396196513471
Validation class_accuracies: [0.7219917012448133, 0.7348993288590604]
Validation precision: 0.44969199178644764
Validation recall: 0.7348993288590604
Validation f1: 0.5579617834394904
Validation roc_auc: 0.7843576819181819
Validation avg_accuracy: 0.7284455150519369
Validation one_indexed_epoch: 12
The validation tracker metric at 0.7634924392213651 hasn't increased by 0 in 2 epochs
316/316 - 710s - loss: 0.3313 - accuracy: 0.8468 - 710s/epoch - 2s/step
Epoch 13/25
Validation cm: [[673 291]
 [ 45 253]]
Validation normalized_cm: [[0.698 0.302]
 [0.151 0.849]]
Validation acc: 0.7337559429477021
Validation class_accuracies: [0.6981327800829875, 0.8489932885906041]
Validation precision: 0.4650735294117647
Validation recall: 0.8489932885906041
Validation f1: 0.6009501187648455
Validation roc_auc: 0.8340597064802695
Validation avg_accuracy: 0.7735630343367959
Validation one_indexed_epoch: 13
-- New best results were achieved. --
Patient Confusion matrix: 
 [[587 106]
 [ 19  28]] 
Patient Normalized Confusion matrix: 
 [[0.847 0.153]
 [0.404 0.596]] 
Patient Validation accuracy: 
 83.11 
Patient Validation class accuracies: 
 [0.847041847041847, 0.5957446808510638] 
316/316 - 712s - loss: 0.3234 - accuracy: 0.8468 - 712s/epoch - 2s/step
Epoch 14/25
Validation cm: [[749 215]
 [ 80 218]]
Validation normalized_cm: [[0.777 0.223]
 [0.268 0.732]]
Validation acc: 0.7662440570522979
Validation class_accuracies: [0.7769709543568465, 0.7315436241610739]
Validation precision: 0.5034642032332564
Validation recall: 0.7315436241610739
Validation f1: 0.5964432284541724
Validation roc_auc: 0.8098770503216464
Validation avg_accuracy: 0.7542572892589602
Validation one_indexed_epoch: 14
The validation tracker metric at 0.7735630343367959 hasn't increased by 0 in 1 epochs
316/316 - 775s - loss: 0.3173 - accuracy: 0.8587 - 775s/epoch - 2s/step
Epoch 15/25
Validation cm: [[936  28]
 [222  76]]
Validation normalized_cm: [[0.971 0.029]
 [0.745 0.255]]
Validation acc: 0.8019017432646592
Validation class_accuracies: [0.970954356846473, 0.2550335570469799]
Validation precision: 0.7307692307692307
Validation recall: 0.2550335570469799
Validation f1: 0.37810945273631846
Validation roc_auc: 0.8414603581274889
Validation avg_accuracy: 0.6129939569467264
Validation one_indexed_epoch: 15
The validation tracker metric at 0.7735630343367959 hasn't increased by 0 in 2 epochs
316/316 - 770s - loss: 0.3063 - accuracy: 0.8581 - 770s/epoch - 2s/step
Epoch 16/25
Validation cm: [[715 249]
 [ 70 228]]
Validation normalized_cm: [[0.742 0.258]
 [0.235 0.765]]
Validation acc: 0.7472266244057052
Validation class_accuracies: [0.741701244813278, 0.7651006711409396]
Validation precision: 0.4779874213836478
Validation recall: 0.7651006711409396
Validation f1: 0.5883870967741935
Validation roc_auc: 0.8388321869169288
Validation avg_accuracy: 0.7534009579771088
Validation one_indexed_epoch: 16
The validation tracker metric at 0.7735630343367959 hasn't increased by 0 in 3 epochs
316/316 - 732s - loss: 0.2956 - accuracy: 0.8676 - 732s/epoch - 2s/step
Epoch 17/25
Validation cm: [[757 207]
 [100 198]]
Validation normalized_cm: [[0.785 0.215]
 [0.336 0.664]]
Validation acc: 0.7567353407290016
Validation class_accuracies: [0.7852697095435685, 0.6644295302013423]
Validation precision: 0.4888888888888889
Validation recall: 0.6644295302013423
Validation f1: 0.5633001422475106
Validation roc_auc: 0.8233033501350636
Validation avg_accuracy: 0.7248496198724554
Validation one_indexed_epoch: 17
The validation tracker metric at 0.7735630343367959 hasn't increased by 0 in 4 epochs
316/316 - 711s - loss: 0.2823 - accuracy: 0.8724 - 711s/epoch - 2s/step
Epoch 18/25
Validation cm: [[835 129]
 [114 184]]
Validation normalized_cm: [[0.866 0.134]
 [0.383 0.617]]
Validation acc: 0.8074484944532488
Validation class_accuracies: [0.8661825726141079, 0.6174496644295302]
Validation precision: 0.5878594249201278
Validation recall: 0.6174496644295302
Validation f1: 0.602291325695581
Validation roc_auc: 0.8348046450750508
Validation avg_accuracy: 0.7418161185218191
Validation one_indexed_epoch: 18
The validation tracker metric at 0.7735630343367959 hasn't increased by 0 in 5 epochs
316/316 - 711s - loss: 0.2922 - accuracy: 0.8666 - 711s/epoch - 2s/step
Epoch 19/25
Validation cm: [[849 115]
 [103 195]]
Validation normalized_cm: [[0.881 0.119]
 [0.346 0.654]]
Validation acc: 0.8272583201267829
Validation class_accuracies: [0.8807053941908713, 0.6543624161073825]
Validation precision: 0.6290322580645161
Validation recall: 0.6543624161073825
Validation f1: 0.6414473684210527
Validation roc_auc: 0.8616746498092399
Validation avg_accuracy: 0.767533905149127
Validation one_indexed_epoch: 19
The validation tracker metric at 0.7735630343367959 hasn't increased by 0 in 6 epochs
316/316 - 711s - loss: 0.2691 - accuracy: 0.8823 - 711s/epoch - 2s/step
Epoch 20/25
Validation cm: [[736 228]
 [ 50 248]]
Validation normalized_cm: [[0.763 0.237]
 [0.168 0.832]]
Validation acc: 0.7797147385103012
Validation class_accuracies: [0.7634854771784232, 0.8322147651006712]
Validation precision: 0.5210084033613446
Validation recall: 0.8322147651006712
Validation f1: 0.640826873385013
Validation roc_auc: 0.8737085410342811
Validation avg_accuracy: 0.7978501211395472
Validation one_indexed_epoch: 20
-- New best results were achieved. --
Patient Confusion matrix: 
 [[587 106]
 [  8  39]] 
Patient Normalized Confusion matrix: 
 [[0.847 0.153]
 [0.17  0.83 ]] 
Patient Validation accuracy: 
 84.59 
Patient Validation class accuracies: 
 [0.847041847041847, 0.8297872340425532] 
316/316 - 711s - loss: 0.2550 - accuracy: 0.8882 - 711s/epoch - 2s/step
Epoch 21/25
Validation cm: [[830 134]
 [104 194]]
Validation normalized_cm: [[0.861 0.139]
 [0.349 0.651]]
Validation acc: 0.8114104595879557
Validation class_accuracies: [0.8609958506224067, 0.6510067114093959]
Validation precision: 0.5914634146341463
Validation recall: 0.6510067114093959
Validation f1: 0.6198083067092651
Validation roc_auc: 0.8712439778328552
Validation avg_accuracy: 0.7560012810159014
Validation one_indexed_epoch: 21
The validation tracker metric at 0.7978501211395472 hasn't increased by 0 in 1 epochs
316/316 - 710s - loss: 0.2475 - accuracy: 0.8964 - 710s/epoch - 2s/step
Epoch 22/25
Validation cm: [[760 204]
 [ 58 240]]
Validation normalized_cm: [[0.788 0.212]
 [0.195 0.805]]
Validation acc: 0.7923930269413629
Validation class_accuracies: [0.7883817427385892, 0.8053691275167785]
Validation precision: 0.5405405405405406
Validation recall: 0.8053691275167785
Validation f1: 0.646900269541779
Validation roc_auc: 0.8716965106240775
Validation avg_accuracy: 0.7968754351276839
Validation one_indexed_epoch: 22
The validation tracker metric at 0.7978501211395472 hasn't increased by 0 in 2 epochs
316/316 - 711s - loss: 0.2398 - accuracy: 0.8936 - 711s/epoch - 2s/step
Epoch 23/25
Validation cm: [[877  87]
 [126 172]]
Validation normalized_cm: [[0.91  0.09 ]
 [0.423 0.577]]
Validation acc: 0.8312202852614897
Validation class_accuracies: [0.9097510373443983, 0.5771812080536913]
Validation precision: 0.6640926640926641
Validation recall: 0.5771812080536913
Validation f1: 0.6175942549371635
Validation roc_auc: 0.8709585340722381
Validation avg_accuracy: 0.7434661226990449
Validation one_indexed_epoch: 23
The validation tracker metric at 0.7978501211395472 hasn't increased by 0 in 3 epochs
316/316 - 710s - loss: 0.2218 - accuracy: 0.9080 - 710s/epoch - 2s/step
Epoch 24/25
Validation cm: [[822 142]
 [ 97 201]]
Validation normalized_cm: [[0.853 0.147]
 [0.326 0.674]]
Validation acc: 0.8106180665610143
Validation class_accuracies: [0.8526970954356846, 0.674496644295302]
Validation precision: 0.5860058309037901
Validation recall: 0.674496644295302
Validation f1: 0.6271450858034321
Validation roc_auc: 0.8513847503411401
Validation avg_accuracy: 0.7635968698654934
Validation one_indexed_epoch: 24
The validation tracker metric at 0.7978501211395472 hasn't increased by 0 in 4 epochs
316/316 - 711s - loss: 0.2057 - accuracy: 0.9148 - 711s/epoch - 2s/step
Epoch 25/25
Validation cm: [[883  81]
 [135 163]]
Validation normalized_cm: [[0.916 0.084]
 [0.453 0.547]]
Validation acc: 0.8288431061806656
Validation class_accuracies: [0.9159751037344398, 0.5469798657718121]
Validation precision: 0.6680327868852459
Validation recall: 0.5469798657718121
Validation f1: 0.6014760147601477
Validation roc_auc: 0.8722291069091315
Validation avg_accuracy: 0.731477484753126
Validation one_indexed_epoch: 25
The validation tracker metric at 0.7978501211395472 hasn't increased by 0 in 5 epochs
316/316 - 713s - loss: 0.1970 - accuracy: 0.9176 - 713s/epoch - 2s/step
----------------------------------
The best metrics for this job are: 

Best avg_accuracy: 0.7978501211395472
Best cm: [[736 228]
 [ 50 248]]
Best normalized_cm: [[0.763 0.237]
 [0.168 0.832]]
Best acc: 0.7797147385103012
Best class_accuracies: [0.7634854771784232, 0.8322147651006712]
Best precision: 0.5210084033613446
Best recall: 0.8322147651006712
Best f1: 0.640826873385013
Best roc_auc: 0.8737085410342811
Best one_indexed_epoch: 20
Best patient_cm: [[587 106]
 [  8  39]]
avg_accuracy
model
cm
normalized_cm
acc
class_accuracies
precision
recall
f1
roc_auc
one_indexed_epoch
patient_cm
Initial weights
[<tf.Variable 'leaf/tfbanks_preemp/kernel:0' shape=(2, 1, 1) dtype=float32, numpy=
array([[[-0.994]],

       [[ 1.003]]], dtype=float32)>, <tf.Variable 'kernel:0' shape=(80, 2) dtype=float32, numpy=
array([[1.573e-02, 1.503e+02],
       [4.003e-02, 9.595e+01],
       [4.578e-02, 1.503e+02],
       [4.887e-02, 1.503e+02],
       [7.225e-02, 1.503e+02],
       [7.911e-02, 9.596e+01],
       [1.051e-01, 9.590e+01],
       [8.669e-02, 9.595e+01],
       [1.050e-01, 9.593e+01],
       [1.292e-01, 9.593e+01],
       [1.313e-01, 9.592e+01],
       [1.413e-01, 9.594e+01],
       [1.611e-01, 9.593e+01],
       [1.840e-01, 9.592e+01],
       [1.944e-01, 9.594e+01],
       [2.147e-01, 9.593e+01],
       [2.246e-01, 1.503e+02],
       [2.340e-01, 9.594e+01],
       [2.416e-01, 9.595e+01],
       [2.682e-01, 9.592e+01],
       [2.849e-01, 9.594e+01],
       [2.912e-01, 9.594e+01],
       [3.341e-01, 9.595e+01],
       [3.362e-01, 9.596e+01],
       [3.580e-01, 6.396e+01],
       [3.709e-01, 9.595e+01],
       [3.815e-01, 6.395e+01],
       [4.155e-01, 9.593e+01],
       [4.214e-01, 6.396e+01],
       [4.663e-01, 6.396e+01],
       [4.847e-01, 6.399e+01],
       [5.074e-01, 6.397e+01],
       [5.263e-01, 6.397e+01],
       [5.583e-01, 6.396e+01],
       [5.737e-01, 6.396e+01],
       [6.050e-01, 6.398e+01],
       [6.189e-01, 6.394e+01],
       [6.342e-01, 6.397e+01],
       [6.866e-01, 4.798e+01],
       [7.010e-01, 4.795e+01],
       [7.307e-01, 4.795e+01],
       [7.499e-01, 4.795e+01],
       [8.077e-01, 4.797e+01],
       [8.473e-01, 4.798e+01],
       [8.819e-01, 4.798e+01],
       [8.887e-01, 4.795e+01],
       [9.488e-01, 4.799e+01],
       [9.745e-01, 3.836e+01],
       [1.010e+00, 3.838e+01],
       [1.031e+00, 3.838e+01],
       [1.086e+00, 3.838e+01],
       [1.147e+00, 3.837e+01],
       [1.180e+00, 3.199e+01],
       [1.204e+00, 3.197e+01],
       [1.278e+00, 3.837e+01],
       [1.309e+00, 3.201e+01],
       [1.383e+00, 3.202e+01],
       [1.413e+00, 3.199e+01],
       [1.459e+00, 2.742e+01],
       [1.508e+00, 2.742e+01],
       [1.552e+00, 3.197e+01],
       [1.613e+00, 2.741e+01],
       [1.682e+00, 2.744e+01],
       [1.729e+00, 2.399e+01],
       [1.810e+00, 2.398e+01],
       [1.866e+00, 2.398e+01],
       [1.921e+00, 2.398e+01],
       [1.984e+00, 2.400e+01],
       [2.027e+00, 2.132e+01],
       [2.144e+00, 2.133e+01],
       [2.198e+00, 1.919e+01],
       [2.272e+00, 1.919e+01],
       [2.370e+00, 2.133e+01],
       [2.422e+00, 1.919e+01],
       [2.514e+00, 1.919e+01],
       [2.601e+00, 1.744e+01],
       [2.690e+00, 1.744e+01],
       [2.769e+00, 1.599e+01],
       [2.873e+00, 1.743e+01],
       [2.973e+00, 1.598e+01]], dtype=float32)>, <tf.Variable 'leaf/learnable_pooling/kernel:0' shape=(1, 1, 80, 1) dtype=float32, numpy=
array([[[[0.416],
         [0.401],
         [0.422],
         [0.423],
         [0.394],
         [0.397],
         [0.384],
         [0.397],
         [0.379],
         [0.377],
         [0.402],
         [0.375],
         [0.398],
         [0.394],
         [0.403],
         [0.423],
         [0.398],
         [0.402],
         [0.422],
         [0.391],
         [0.397],
         [0.391],
         [0.397],
         [0.372],
         [0.396],
         [0.39 ],
         [0.398],
         [0.429],
         [0.402],
         [0.389],
         [0.373],
         [0.399],
         [0.386],
         [0.402],
         [0.408],
         [0.392],
         [0.395],
         [0.42 ],
         [0.43 ],
         [0.406],
         [0.422],
         [0.41 ],
         [0.412],
         [0.405],
         [0.413],
         [0.432],
         [0.382],
         [0.439],
         [0.408],
         [0.407],
         [0.414],
         [0.418],
         [0.398],
         [0.395],
         [0.414],
         [0.4  ],
         [0.373],
         [0.383],
         [0.401],
         [0.405],
         [0.409],
         [0.405],
         [0.379],
         [0.404],
         [0.407],
         [0.405],
         [0.405],
         [0.388],
         [0.409],
         [0.399],
         [0.38 ],
         [0.403],
         [0.394],
         [0.402],
         [0.397],
         [0.399],
         [0.405],
         [0.392],
         [0.405],
         [0.407]]]], dtype=float32)>, <tf.Variable 'leaf/PCEN/alpha:0' shape=(80,) dtype=float32, numpy=
array([0.953, 0.958, 0.956, 0.95 , 0.968, 0.971, 0.948, 0.959, 0.949,
       0.96 , 0.963, 0.956, 0.958, 0.955, 0.958, 0.964, 0.958, 0.959,
       0.962, 0.958, 0.964, 0.969, 0.959, 0.959, 0.966, 0.956, 0.956,
       0.953, 0.97 , 0.965, 0.958, 0.947, 0.961, 0.959, 0.961, 0.955,
       0.965, 0.957, 0.948, 0.953, 0.964, 0.955, 0.953, 0.956, 0.959,
       0.963, 0.974, 0.961, 0.975, 0.964, 0.953, 0.953, 0.963, 0.95 ,
       0.961, 0.96 , 0.966, 0.963, 0.962, 0.957, 0.954, 0.964, 0.958,
       0.956, 0.956, 0.958, 0.954, 0.954, 0.958, 0.961, 0.969, 0.957,
       0.963, 0.953, 0.968, 0.959, 0.957, 0.956, 0.954, 0.96 ],
      dtype=float32)>, <tf.Variable 'leaf/PCEN/delta:0' shape=(80,) dtype=float32, numpy=
array([2.006, 2.002, 2.003, 2.007, 1.986, 1.98 , 2.007, 1.997, 2.007,
       1.995, 1.998, 2.005, 2.002, 2.003, 2.002, 1.997, 2.002, 2.002,
       1.998, 2.002, 1.996, 1.991, 2.001, 2.001, 1.994, 2.003, 2.004,
       2.007, 1.991, 1.996, 2.002, 2.013, 1.998, 2.   , 1.998, 2.005,
       1.996, 2.003, 2.012, 2.007, 1.997, 2.005, 2.006, 2.003, 2.001,
       1.997, 1.986, 1.999, 1.985, 1.997, 2.007, 2.007, 1.997, 2.01 ,
       1.999, 2.   , 1.994, 1.997, 1.998, 2.003, 2.006, 1.996, 2.002,
       2.004, 2.004, 2.002, 2.006, 2.006, 2.002, 1.999, 1.991, 2.003,
       1.997, 2.007, 1.992, 2.001, 2.002, 2.004, 2.006, 2.   ],
      dtype=float32)>, <tf.Variable 'leaf/PCEN/root:0' shape=(80,) dtype=float32, numpy=
array([2.003, 2.002, 2.002, 2.005, 1.982, 1.978, 2.005, 1.994, 2.007,
       1.997, 1.997, 2.002, 2.001, 2.005, 2.005, 1.999, 2.004, 2.005,
       2.001, 2.001, 1.995, 1.988, 2.   , 1.997, 1.99 , 2.003, 2.003,
       2.008, 1.99 , 1.997, 2.001, 2.012, 2.003, 2.004, 2.001, 2.006,
       1.994, 2.004, 2.013, 2.007, 1.994, 2.005, 2.002, 2.008, 2.001,
       1.998, 1.987, 1.999, 1.986, 1.997, 2.007, 2.007, 1.996, 2.008,
       1.999, 2.001, 1.996, 1.998, 1.999, 2.004, 2.006, 1.996, 2.002,
       2.004, 2.004, 2.002, 2.008, 2.007, 2.003, 2.   , 1.992, 2.003,
       1.998, 2.007, 1.993, 2.002, 2.003, 2.005, 2.007, 2.001],
      dtype=float32)>, <tf.Variable 'leaf/PCEN/EMA/smooth:0' shape=(80,) dtype=float32, numpy=
array([0.029, 0.059, 0.024, 0.044, 0.044, 0.047, 0.05 , 0.027, 0.054,
       0.06 , 0.035, 0.053, 0.034, 0.037, 0.045, 0.04 , 0.052, 0.047,
       0.034, 0.048, 0.039, 0.036, 0.027, 0.027, 0.045, 0.054, 0.05 ,
       0.043, 0.046, 0.044, 0.038, 0.053, 0.062, 0.065, 0.052, 0.04 ,
       0.033, 0.035, 0.042, 0.037, 0.027, 0.037, 0.029, 0.046, 0.041,
       0.047, 0.051, 0.032, 0.04 , 0.034, 0.038, 0.049, 0.036, 0.035,
       0.054, 0.049, 0.04 , 0.04 , 0.055, 0.038, 0.03 , 0.044, 0.059,
       0.034, 0.036, 0.045, 0.039, 0.052, 0.051, 0.052, 0.053, 0.042,
       0.049, 0.045, 0.046, 0.042, 0.044, 0.052, 0.052, 0.049],
      dtype=float32)>]
Post training weights
[<tf.Variable 'leaf/tfbanks_preemp/kernel:0' shape=(2, 1, 1) dtype=float32, numpy=
array([[[-0.994]],

       [[ 1.003]]], dtype=float32)>, <tf.Variable 'kernel:0' shape=(80, 2) dtype=float32, numpy=
array([[1.573e-02, 1.503e+02],
       [4.003e-02, 9.595e+01],
       [4.578e-02, 1.503e+02],
       [4.887e-02, 1.503e+02],
       [7.225e-02, 1.503e+02],
       [7.911e-02, 9.596e+01],
       [1.051e-01, 9.590e+01],
       [8.669e-02, 9.595e+01],
       [1.050e-01, 9.593e+01],
       [1.292e-01, 9.593e+01],
       [1.313e-01, 9.592e+01],
       [1.413e-01, 9.594e+01],
       [1.611e-01, 9.593e+01],
       [1.840e-01, 9.592e+01],
       [1.944e-01, 9.594e+01],
       [2.147e-01, 9.593e+01],
       [2.246e-01, 1.503e+02],
       [2.340e-01, 9.594e+01],
       [2.416e-01, 9.595e+01],
       [2.682e-01, 9.592e+01],
       [2.849e-01, 9.594e+01],
       [2.912e-01, 9.594e+01],
       [3.341e-01, 9.595e+01],
       [3.362e-01, 9.596e+01],
       [3.580e-01, 6.396e+01],
       [3.709e-01, 9.595e+01],
       [3.815e-01, 6.395e+01],
       [4.155e-01, 9.593e+01],
       [4.214e-01, 6.396e+01],
       [4.663e-01, 6.396e+01],
       [4.847e-01, 6.399e+01],
       [5.074e-01, 6.397e+01],
       [5.263e-01, 6.397e+01],
       [5.583e-01, 6.396e+01],
       [5.737e-01, 6.396e+01],
       [6.050e-01, 6.398e+01],
       [6.189e-01, 6.394e+01],
       [6.342e-01, 6.397e+01],
       [6.866e-01, 4.798e+01],
       [7.010e-01, 4.795e+01],
       [7.307e-01, 4.795e+01],
       [7.499e-01, 4.795e+01],
       [8.077e-01, 4.797e+01],
       [8.473e-01, 4.798e+01],
       [8.819e-01, 4.798e+01],
       [8.887e-01, 4.795e+01],
       [9.488e-01, 4.799e+01],
       [9.745e-01, 3.836e+01],
       [1.010e+00, 3.838e+01],
       [1.031e+00, 3.838e+01],
       [1.086e+00, 3.838e+01],
       [1.147e+00, 3.837e+01],
       [1.180e+00, 3.199e+01],
       [1.204e+00, 3.197e+01],
       [1.278e+00, 3.837e+01],
       [1.309e+00, 3.201e+01],
       [1.383e+00, 3.202e+01],
       [1.413e+00, 3.199e+01],
       [1.459e+00, 2.742e+01],
       [1.508e+00, 2.742e+01],
       [1.552e+00, 3.197e+01],
       [1.613e+00, 2.741e+01],
       [1.682e+00, 2.744e+01],
       [1.729e+00, 2.399e+01],
       [1.810e+00, 2.398e+01],
       [1.866e+00, 2.398e+01],
       [1.921e+00, 2.398e+01],
       [1.984e+00, 2.400e+01],
       [2.027e+00, 2.132e+01],
       [2.144e+00, 2.133e+01],
       [2.198e+00, 1.919e+01],
       [2.272e+00, 1.919e+01],
       [2.370e+00, 2.133e+01],
       [2.422e+00, 1.919e+01],
       [2.514e+00, 1.919e+01],
       [2.601e+00, 1.744e+01],
       [2.690e+00, 1.744e+01],
       [2.769e+00, 1.599e+01],
       [2.873e+00, 1.743e+01],
       [2.973e+00, 1.598e+01]], dtype=float32)>, <tf.Variable 'leaf/learnable_pooling/kernel:0' shape=(1, 1, 80, 1) dtype=float32, numpy=
array([[[[0.416],
         [0.401],
         [0.422],
         [0.423],
         [0.394],
         [0.397],
         [0.384],
         [0.397],
         [0.379],
         [0.377],
         [0.402],
         [0.375],
         [0.398],
         [0.394],
         [0.403],
         [0.423],
         [0.398],
         [0.402],
         [0.422],
         [0.391],
         [0.397],
         [0.391],
         [0.397],
         [0.372],
         [0.396],
         [0.39 ],
         [0.398],
         [0.429],
         [0.402],
         [0.389],
         [0.373],
         [0.399],
         [0.386],
         [0.402],
         [0.408],
         [0.392],
         [0.395],
         [0.42 ],
         [0.43 ],
         [0.406],
         [0.422],
         [0.41 ],
         [0.412],
         [0.405],
         [0.413],
         [0.432],
         [0.382],
         [0.439],
         [0.408],
         [0.407],
         [0.414],
         [0.418],
         [0.398],
         [0.395],
         [0.414],
         [0.4  ],
         [0.373],
         [0.383],
         [0.401],
         [0.405],
         [0.409],
         [0.405],
         [0.379],
         [0.404],
         [0.407],
         [0.405],
         [0.405],
         [0.388],
         [0.409],
         [0.399],
         [0.38 ],
         [0.403],
         [0.394],
         [0.402],
         [0.397],
         [0.399],
         [0.405],
         [0.392],
         [0.405],
         [0.407]]]], dtype=float32)>, <tf.Variable 'leaf/PCEN/alpha:0' shape=(80,) dtype=float32, numpy=
array([0.953, 0.958, 0.956, 0.95 , 0.968, 0.971, 0.948, 0.959, 0.949,
       0.96 , 0.963, 0.956, 0.958, 0.955, 0.958, 0.964, 0.958, 0.959,
       0.962, 0.958, 0.964, 0.969, 0.959, 0.959, 0.966, 0.956, 0.956,
       0.953, 0.97 , 0.965, 0.958, 0.947, 0.961, 0.959, 0.961, 0.955,
       0.965, 0.957, 0.948, 0.953, 0.964, 0.955, 0.953, 0.956, 0.959,
       0.963, 0.974, 0.961, 0.975, 0.964, 0.953, 0.953, 0.963, 0.95 ,
       0.961, 0.96 , 0.966, 0.963, 0.962, 0.957, 0.954, 0.964, 0.958,
       0.956, 0.956, 0.958, 0.954, 0.954, 0.958, 0.961, 0.969, 0.957,
       0.963, 0.953, 0.968, 0.959, 0.957, 0.956, 0.954, 0.96 ],
      dtype=float32)>, <tf.Variable 'leaf/PCEN/delta:0' shape=(80,) dtype=float32, numpy=
array([2.006, 2.002, 2.003, 2.007, 1.986, 1.98 , 2.007, 1.997, 2.007,
       1.995, 1.998, 2.005, 2.002, 2.003, 2.002, 1.997, 2.002, 2.002,
       1.998, 2.002, 1.996, 1.991, 2.001, 2.001, 1.994, 2.003, 2.004,
       2.007, 1.991, 1.996, 2.002, 2.013, 1.998, 2.   , 1.998, 2.005,
       1.996, 2.003, 2.012, 2.007, 1.997, 2.005, 2.006, 2.003, 2.001,
       1.997, 1.986, 1.999, 1.985, 1.997, 2.007, 2.007, 1.997, 2.01 ,
       1.999, 2.   , 1.994, 1.997, 1.998, 2.003, 2.006, 1.996, 2.002,
       2.004, 2.004, 2.002, 2.006, 2.006, 2.002, 1.999, 1.991, 2.003,
       1.997, 2.007, 1.992, 2.001, 2.002, 2.004, 2.006, 2.   ],
      dtype=float32)>, <tf.Variable 'leaf/PCEN/root:0' shape=(80,) dtype=float32, numpy=
array([2.003, 2.002, 2.002, 2.005, 1.982, 1.978, 2.005, 1.994, 2.007,
       1.997, 1.997, 2.002, 2.001, 2.005, 2.005, 1.999, 2.004, 2.005,
       2.001, 2.001, 1.995, 1.988, 2.   , 1.997, 1.99 , 2.003, 2.003,
       2.008, 1.99 , 1.997, 2.001, 2.012, 2.003, 2.004, 2.001, 2.006,
       1.994, 2.004, 2.013, 2.007, 1.994, 2.005, 2.002, 2.008, 2.001,
       1.998, 1.987, 1.999, 1.986, 1.997, 2.007, 2.007, 1.996, 2.008,
       1.999, 2.001, 1.996, 1.998, 1.999, 2.004, 2.006, 1.996, 2.002,
       2.004, 2.004, 2.002, 2.008, 2.007, 2.003, 2.   , 1.992, 2.003,
       1.998, 2.007, 1.993, 2.002, 2.003, 2.005, 2.007, 2.001],
      dtype=float32)>, <tf.Variable 'leaf/PCEN/EMA/smooth:0' shape=(80,) dtype=float32, numpy=
array([0.029, 0.059, 0.024, 0.044, 0.044, 0.047, 0.05 , 0.027, 0.054,
       0.06 , 0.035, 0.053, 0.034, 0.037, 0.045, 0.04 , 0.052, 0.047,
       0.034, 0.048, 0.039, 0.036, 0.027, 0.027, 0.045, 0.054, 0.05 ,
       0.043, 0.046, 0.044, 0.038, 0.053, 0.062, 0.065, 0.052, 0.04 ,
       0.033, 0.035, 0.042, 0.037, 0.027, 0.037, 0.029, 0.046, 0.041,
       0.047, 0.051, 0.032, 0.04 , 0.034, 0.038, 0.049, 0.036, 0.035,
       0.054, 0.049, 0.04 , 0.04 , 0.055, 0.038, 0.03 , 0.044, 0.059,
       0.034, 0.036, 0.045, 0.039, 0.052, 0.051, 0.052, 0.053, 0.042,
       0.049, 0.045, 0.046, 0.042, 0.044, 0.052, 0.052, 0.049],
      dtype=float32)>]/home/alirachidi/anaconda3/envs/LungSoundClass/lib/python3.7/site-packages/sklearn/metrics/_classification.py:1272: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/home/alirachidi/classification_algorithm/trainers/modules/main/global_helpers.py:48: UserWarning: Matplotlib is currently using agg, which is a non-GUI backend, so cannot show the figure.
  plt.show()
/home/alirachidi/classification_algorithm/trainers/modules/callbacks/visualizationCallback.py:32: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  print(np.array(self.model._frontend.weights) - np.array(self.first_weights))

Weight difference
[<tf.Tensor: shape=(2, 1, 1), dtype=float32, numpy=
 array([[[0.]],

        [[0.]]], dtype=float32)>
 <tf.Tensor: shape=(80, 2), dtype=float32, numpy=
 array([[0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.]], dtype=float32)>
 <tf.Tensor: shape=(1, 1, 80, 1), dtype=float32, numpy=
 array([[[[0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.],
          [0.]]]], dtype=float32)>
 <tf.Tensor: shape=(80,), dtype=float32, numpy=
 array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], dtype=float32)>
 <tf.Tensor: shape=(80,), dtype=float32, numpy=
 array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], dtype=float32)>
 <tf.Tensor: shape=(80,), dtype=float32, numpy=
 array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], dtype=float32)>
 <tf.Tensor: shape=(80,), dtype=float32, numpy=
 array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], dtype=float32)>   ]
